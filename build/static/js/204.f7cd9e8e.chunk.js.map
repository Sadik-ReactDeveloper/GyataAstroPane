{"version":3,"sources":["views/apps/setting/bay/BayList.js"],"names":["i","BayList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","bay","className","color","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","console","log","this","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/204.f7cd9e8e.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport {  Edit,  Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../../history\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../../assets/scss/pages/users.scss\";\nclass BayList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 150,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Bay\",\n        field: \"bay\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.bay}</span>\n            </div>\n          );\n        },\n      },\n      \n  \n      // {\n      //   headerName: \"Status\",\n      //   field: \"status\",\n      //   filter: true,\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return params.value === \"Active\" ? (\n      //       <div className=\"badge badge-pill badge-success\">\n      //         {params.data.status}\n      //       </div>\n      //     ) : params.value === \"Inactive\" ? (\n      //       <div className=\"badge badge-pill badge-warning\">\n      //         {params.data.status}\n      //       </div>\n      //     ) : null;\n      //   },\n      // },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        // field: \"transactions\",\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              {/* <Eye\n                className=\"mr-50\"\n                color=\"green\"\n                size={20}\n                onClick={() =>\n                  history.push(`/app/setting/moc/viewMOC/${params.data._id}`)\n                }\n              /> */}\n              <Edit\n                className=\"mr-50\"\n                color=\"blue\"\n                size={20}\n                onClick={() => history.push(`/app/setting/bay/editbay/${params.data._id}`)}\n              />\n              <Trash2\n                size={20}\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  async componentDidMount() {\n    await axios.get(`http://3.108.185.7/nodejs/api/dealer/getbay`).then((response) => {\n      const rowData = response.data.data;\n      console.log(rowData);\n      this.setState({ rowData });\n    });\n  }\n//   async runthisfunction(id) {\n//     console.log(id);\n//     await axios.get(`http://3.108.185.7/nodejs/api/dealer/deletebank/${id}`).then(\n//       (response) => {\n//         console.log(response);\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n//   }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\">\n            \n          </Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    Bay List\n                  </h1>\n                </Col>\n                <Col>\n                  <Button\n                    className=\" btn btn-danger float-right\"\n                    onClick={() => history.push(\"/app/setting/bay/addBay\")}\n                  >\n                   ADD Bay\n                  </Button>\n                </Col>\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\nexport default BayList;"],"sourceRoot":""}