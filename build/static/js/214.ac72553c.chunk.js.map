{"version":3,"sources":["views/apps/userrequest/UserRequestList.js"],"names":["UserRideList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","userid","fullname","className","gender","dob","p_date_of_time","p_birthPlace","marital_status","occupation","topic_of_cnsrn","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","astroId","localStorage","getItem","console","log","axiosConfig","get","then","response","id","axios","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","render","history","push","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/214.ac72553c.chunk.js","sourcesContent":["// import React from \"react\";\n// import {\n//   Card,\n//   CardBody,\n//   Input,\n//   Row,\n//   Col,\n//   Button,\n//   UncontrolledDropdown,\n//   DropdownMenu,\n//   DropdownItem,\n//   DropdownToggle,\n// } from \"reactstrap\";\n// import axiosConfig from \"../../../axiosConfig\";\n// import axios from \"axios\";\n// import { ContextLayout } from \"../../../utility/context/Layout\";\n// import { AgGridReact } from \"ag-grid-react\";\n// import { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n// //import classnames from \"classnames\";\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// import \"../../../assets/scss/pages/users.scss\";\n// import { Route } from \"react-router-dom\";\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\n// class UserRideList extends React.Component {\n//   state = {\n//     rowData: [],\n//     paginationPageSize: 20,\n//     currenPageSize: \"\",\n//     getPageSize: \"\",\n//     defaultColDef: {\n//       sortable: true,\n//       editable: true,\n//       resizable: true,\n//       suppressMenu: true,\n//     },\n//     columnDefs: [\n//       {\n//         headerName: \"S.No\",\n//         valueGetter: \"node.rowIndex + 1\",\n//         field: \"node.rowIndex + 1\",\n//         width: 100,\n//         filter: true,\n//         // checkboxSelection: true,\n//         // headerCheckboxSelectionFilteredOnly: true,\n//         // headerCheckboxSelection: true,\n//       },\n\n//       {\n//         headerName: \"Name\",\n//         field: \"fullname\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.userid?.fullname} </span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Gender\",\n//         field: \"gender\t\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div className=\"d-flex align-items-center cursor-pointer\">\n//               <span>{params.data.gender}</span>\n//             </div>\n//           );\n//         },\n//       },\n//       // {\n//       //   headerName: \"Mobile No.\",\n//       //   field: \"mobile\",\n//       //   filter: true,\n//       //   width: 200,\n//       //   cellRendererFramework: (params) => {\n//       //     return (\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\n//       //         <span>{params.data.userid?.mobile}</span>\n//       //       </div>\n//       //     );\n//       //   },\n//       // },\n//       {\n//         headerName: \"DOB\",\n//         field: \"dob\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div className=\"d-flex align-items-center cursor-pointer\">\n//               <span>{params.data.userid?.dob}</span>\n//             </div>\n//           );\n//         },\n//       },\n//       {\n//         headerName: \"Time Of Birth\",\n//         field: \"tym_of_birth\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.tym_of_birth}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Birth City\",\n//         field: \"birth_city\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.birth_city}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Birth State\",\n//         field: \"birth_state\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.birth_state}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Birth Country\",\n//         field: \"birth_country\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.birth_country}</span>\n//             </div>\n//           );\n//         },\n//       },\n//       {\n//         headerName: \"View BirthDetails\",\n//         field: \"birthdetails\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.birth_country}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Marital Status\",\n//         field: \"marital_status\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.marital_status}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Occupation\",\n//         field: \"occupation\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.occupation}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Topic of concern*\",\n//         field: \"topic_of_cnsrn\",\n//         filter: true,\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div>\n//               <span>{params.data.topic_of_cnsrn}</span>\n//             </div>\n//           );\n//         },\n//       },\n\n//       {\n//         headerName: \"Actions\",\n//         field: \"sortorder\",\n//         width: 200,\n//         cellRendererFramework: (params) => {\n//           return (\n//             <div className=\"actions cursor-pointer\">\n//               {/* <Route render={({ history}) => (\n//               <Eye\n//                 className=\"mr-50\"\n//                 size=\"25px\"\n//                 color=\"green\"\n//                 onClick={() =>\n//                 history.push(`/app/userride/viewUserRide/${params.data._id}`       )\n//               }\n//             />\n//           )}\n//         /> */}\n//               {/* <Route render={({ history}) => (\n//               <Edit\n//                 className=\"mr-50\"\n//                 size=\"25px\"\n//                 color=\"blue\"\n//                 onClick={() => history.push(\"/app/userride/editUserRide\"  )\n//               }\n//             />\n//           )}\n//         /> */}\n//               <Trash2\n//                 className=\"mr-50\"\n//                 size=\"25px\"\n//                 color=\"red\"\n//                 onClick={() => {\n//                   let selectedData = this.gridApi.getSelectedRows();\n//                   this.runthisfunction(params.data._id);\n//                   this.gridApi.updateRowData({ remove: selectedData });\n//                 }}\n//               />\n//             </div>\n//           );\n//         },\n//       },\n//     ],\n//   };\n//   async componentDidMount() {\n//     let astroId = localStorage.getItem(\"astroId\");\n\n//     await axiosConfig\n//       .get(`/admin/get_chat_intake/${astroId}`)\n//       .then((response) => {\n//         let rowData = response.data.data;\n//         console.log(rowData);\n//         this.setState({ rowData });\n//       });\n//   }\n\n//   async runthisfunction(id) {\n//     console.log(id);\n//     await axios.get(`/${id}`).then(\n//       (response) => {\n//         console.log(response);\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n//   }\n//   onGridReady = (params) => {\n//     this.gridApi = params.api;\n//     this.gridColumnApi = params.columnApi;\n//     this.setState({\n//       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n//       getPageSize: this.gridApi.paginationGetPageSize(),\n//       totalPages: this.gridApi.paginationGetTotalPages(),\n//     });\n//   };\n//   updateSearchQuery = (val) => {\n//     this.gridApi.setQuickFilter(val);\n//   };\n//   filterSize = (val) => {\n//     if (this.gridApi) {\n//       this.gridApi.paginationSetPageSize(Number(val));\n//       this.setState({\n//         currenPageSize: val,\n//         getPageSize: val,\n//       });\n//     }\n//   };\n//   render() {\n//     const { rowData, columnDefs, defaultColDef } = this.state;\n//     return (\n//       console.log(rowData),\n//       (\n//         <div>\n//           <Breadcrumbs\n//             breadCrumbTitle=\"Request User List\"\n//             breadCrumbParent=\"Home\"\n//             breadCrumbActive=\" Request User List \"\n//           />\n\n//           <Row className=\"app-user-list\">\n//             <Col sm=\"12\"></Col>\n//             <Col sm=\"12\">\n//               <Card>\n//                 <Row className=\"m-2\">\n//                   <Col>\n//                     <h1 sm=\"6\" className=\"float-left\">\n//                       Request User List\n//                     </h1>\n//                   </Col>\n//                   <Col>\n//                     <Route\n//                       render={({ history }) => (\n//                         <Button\n//                           className=\" btn btn-success float-right\"\n//                           onClick={() => history.push(\"/app/user/addUser\")}\n//                         >\n//                           Add User\n//                         </Button>\n//                       )}\n//                     />\n//                   </Col>\n//                 </Row>\n//                 <CardBody>\n//                   {this.state.rowData === null ? null : (\n//                     <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n//                       <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n//                         <div className=\"mb-1\">\n//                           <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n//                             <DropdownToggle tag=\"div\">\n//                               {this.gridApi\n//                                 ? this.state.currenPageSize\n//                                 : \"\" * this.state.getPageSize -\n//                                   (this.state.getPageSize - 1)}{\" \"}\n//                               -{\" \"}\n//                               {this.state.rowData.length -\n//                                 this.state.currenPageSize *\n//                                   this.state.getPageSize >\n//                               0\n//                                 ? this.state.currenPageSize *\n//                                   this.state.getPageSize\n//                                 : this.state.rowData.length}{\" \"}\n//                               of {this.state.rowData.length}\n//                               <ChevronDown className=\"ml-50\" size={15} />\n//                             </DropdownToggle>\n//                             <DropdownMenu right>\n//                               <DropdownItem\n//                                 tag=\"div\"\n//                                 onClick={() => this.filterSize(20)}\n//                               >\n//                                 20\n//                               </DropdownItem>\n//                               <DropdownItem\n//                                 tag=\"div\"\n//                                 onClick={() => this.filterSize(50)}\n//                               >\n//                                 50\n//                               </DropdownItem>\n//                               <DropdownItem\n//                                 tag=\"div\"\n//                                 onClick={() => this.filterSize(100)}\n//                               >\n//                                 100\n//                               </DropdownItem>\n//                               <DropdownItem\n//                                 tag=\"div\"\n//                                 onClick={() => this.filterSize(134)}\n//                               >\n//                                 134\n//                               </DropdownItem>\n//                             </DropdownMenu>\n//                           </UncontrolledDropdown>\n//                         </div>\n//                         <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n//                           <div className=\"table-input mr-1\">\n//                             <Input\n//                               placeholder=\"search...\"\n//                               onChange={(e) =>\n//                                 this.updateSearchQuery(e.target.value)\n//                               }\n//                               value={this.state.value}\n//                             />\n//                           </div>\n//                           <div className=\"export-btn\">\n//                             <Button.Ripple\n//                               color=\"primary\"\n//                               onClick={() => this.gridApi.exportDataAsCsv()}\n//                             >\n//                               Export as CSV\n//                             </Button.Ripple>\n//                           </div>\n//                         </div>\n//                       </div>\n//                       <ContextLayout.Consumer>\n//                         {(context) => (\n//                           <AgGridReact\n//                             gridOptions={{}}\n//                             rowSelection=\"multiple\"\n//                             defaultColDef={defaultColDef}\n//                             columnDefs={columnDefs}\n//                             rowData={rowData}\n//                             onGridReady={this.onGridReady}\n//                             colResizeDefault={\"shift\"}\n//                             animateRows={true}\n//                             floatingFilter={false}\n//                             pagination={true}\n//                             paginationPageSize={this.state.paginationPageSize}\n//                             pivotPanelShow=\"always\"\n//                             enableRtl={context.state.direction === \"rtl\"}\n//                           />\n//                         )}\n//                       </ContextLayout.Consumer>\n//                     </div>\n//                   )}\n//                 </CardBody>\n//               </Card>\n//             </Col>\n//           </Row>\n//         </div>\n//       )\n//     );\n//   }\n// }\n// export default UserRideList;\nimport React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport axios from \"axios\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass UserRideList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n\n      {\n        headerName: \"Name\",\n        field: \"fullname\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.userid?.fullname} </span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Gender\",\n        field: \"gender\t\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.gender}</span>\n            </div>\n          );\n        },\n      },\n      // {\n      //   headerName: \"Mobile No.\",\n      //   field: \"mobile\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.userid?.mobile}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        headerName: \"DOB\",\n        field: \"dob\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid?.dob}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Time Of Birth\",\n        field: \"date_of_time\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params?.data?.p_date_of_time}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Birth City\",\n        field: \"birth_city\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.p_birthPlace}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Birth State\",\n      //   field: \"birth_state\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.birth_state}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      // {\n      //   headerName: \"Birth Country\",\n      //   field: \"birth_country\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.birth_country}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      {\n        headerName: \"Marital Status\",\n        field: \"marital_status\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.marital_status}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Occupation\",\n        field: \"occupation\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.occupation}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Topic of concern*\",\n        field: \"topic_of_cnsrn\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.topic_of_cnsrn}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              {/* <Route render={({ history}) => (\n              <Eye\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"green\"\n                onClick={() =>\n                history.push(`/app/userride/viewUserRide/${params.data._id}`       )\n              }\n            />\n          )}\n        /> */}\n              {/* <Route render={({ history}) => (\n              <Edit\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"blue\"\n                onClick={() => history.push(\"/app/userride/editUserRide\"  )\n              }\n            />\n          )}\n        /> */}\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    let astroId = localStorage.getItem(\"astroId\");\n    console.log(astroId);\n    await axiosConfig\n      // .get(`/admin/get_chat_intake/${astroId}`)\n      .get(`/admin/intekListByastro/${astroId}`)\n      .then((response) => {\n        console.log(response.data.data);\n        let rowData = response.data.data;\n        console.log(rowData);\n        this.setState({ rowData });\n      });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axios.get(`/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <div>\n          <Breadcrumbs\n            breadCrumbTitle=\"Request User List\"\n            breadCrumbParent=\"Home\"\n            breadCrumbActive=\" Request User List \"\n          />\n\n          <Row className=\"app-user-list\">\n            <Col sm=\"12\"></Col>\n            <Col sm=\"12\">\n              <Card>\n                <Row className=\"m-2\">\n                  <Col>\n                    <h1 sm=\"6\" className=\"float-left\">\n                      Request User List\n                    </h1>\n                  </Col>\n                  <Col>\n                    <Route\n                      render={({ history }) => (\n                        <Button\n                          className=\" btn btn-success float-right\"\n                          onClick={() => history.push(\"/app/user/addUser\")}\n                        >\n                          Add User\n                        </Button>\n                      )}\n                    />\n                  </Col>\n                </Row>\n                <CardBody>\n                  {this.state.rowData === null ? null : (\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                        <div className=\"mb-1\">\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                            <DropdownToggle tag=\"div\">\n                              {this.gridApi\n                                ? this.state.currenPageSize\n                                : \"\" * this.state.getPageSize -\n                                  (this.state.getPageSize - 1)}{\" \"}\n                              -{\" \"}\n                              {this.state.rowData.length -\n                                this.state.currenPageSize *\n                                  this.state.getPageSize >\n                              0\n                                ? this.state.currenPageSize *\n                                  this.state.getPageSize\n                                : this.state.rowData.length}{\" \"}\n                              of {this.state.rowData.length}\n                              <ChevronDown className=\"ml-50\" size={15} />\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(20)}\n                              >\n                                20\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(50)}\n                              >\n                                50\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(100)}\n                              >\n                                100\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(134)}\n                              >\n                                134\n                              </DropdownItem>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        </div>\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                          <div className=\"table-input mr-1\">\n                            <Input\n                              placeholder=\"search...\"\n                              onChange={(e) =>\n                                this.updateSearchQuery(e.target.value)\n                              }\n                              value={this.state.value}\n                            />\n                          </div>\n                          <div className=\"export-btn\">\n                            <Button.Ripple\n                              color=\"primary\"\n                              onClick={() => this.gridApi.exportDataAsCsv()}\n                            >\n                              Export as CSV\n                            </Button.Ripple>\n                          </div>\n                        </div>\n                      </div>\n                      <ContextLayout.Consumer>\n                        {(context) => (\n                          <AgGridReact\n                            gridOptions={{}}\n                            rowSelection=\"multiple\"\n                            defaultColDef={defaultColDef}\n                            columnDefs={columnDefs}\n                            rowData={rowData}\n                            onGridReady={this.onGridReady}\n                            colResizeDefault={\"shift\"}\n                            animateRows={true}\n                            floatingFilter={false}\n                            pagination={true}\n                            paginationPageSize={this.state.paginationPageSize}\n                            pivotPanelShow=\"always\"\n                            enableRtl={context.state.direction === \"rtl\"}\n                          />\n                        )}\n                      </ContextLayout.Consumer>\n                    </div>\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      )\n    );\n  }\n}\nexport default UserRideList;\n"],"sourceRoot":""}