{"version":3,"sources":["views/apps/calls/VideoCall.js"],"names":["randomID","len","result","i","chars","maxPos","length","charAt","Math","floor","random","getUrlParams","url","window","location","href","urlStr","split","URLSearchParams","App","astroName","localStorage","getItem","name","fullname","room","roomID","get","astroname","toString","myMeeting","element","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","zp","create","userID","JSON","parse","joinRoom","maxUsers","container","useFrontFacingCamera","sharedLinks","protocol","host","pathname","turnOnCameraWhenJoining","scenario","mode","config","role","showScreenSharingButton","preJoinViewConfig","title","onUserLeave","astroid","value","userId","astroId","axiosConfig","post","then","res","console","log","catch","err","response","data","className","ref","style","width","height"],"mappings":";kSACA,06MASA,SAASA,EAASC,GAChB,IAAIC,EAAS,GACb,GAAIA,EAAQ,OAAOA,EACnB,IAEEC,EAFEC,EAAQ,iEACVC,EAASD,EAAME,OAGjB,IADAL,EAAMA,GAAO,EACRE,EAAI,EAAGA,EAAIF,EAAKE,IACnBD,GAAUE,EAAMG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEpD,OAAOH,EAGF,SAASS,IAA0C,IAA7BC,EAAG,uDAAGC,OAAOC,SAASC,KAE7CC,EAASJ,EAAIK,MAAM,KAAK,GAC5B,OAAO,IAAIC,gBAAgBF,GAGd,SAASG,IACtB,IAAMC,EAAYC,aAAaC,QAAQ,aACnCC,EAAgB,OAATH,QAAS,IAATA,OAAS,EAATA,EAAWI,SAClBC,EAAOZ,OAAOC,SAASC,KAAKE,MAAM,KAAK,GACrCS,EAASf,IAAegB,IAAI,WAAaF,GAAQzB,EAAS,GAC1D4B,EAAYL,GAAQvB,EAAS,GAAG6B,WAClCC,EAAS,uCAAG,WAAOC,GAAO,2EAEd,WAEO,mCAEfC,EAAWC,oBAAkBC,wBAJrB,WAEO,mCAKnBR,EACA1B,EAAS,GAAG6B,WACZD,GAIIO,EAAKF,oBAAkBG,OAAOJ,GAChCK,EAASC,KAAKC,MAAMlB,aAAaC,QAAQ,YAE7Ca,EAAGK,SAAS,CACVC,SAAU,EACVC,UAAWX,EACXY,sBAAsB,EACtBC,YAAa,CACX,CACErB,KAAM,gBACNX,IACEC,OAAOC,SAAS+B,SAChB,KACAhC,OAAOC,SAASgC,KAChB,eACAjC,OAAOC,SAASiC,SAChB,WACArB,IAGNsB,yBAAyB,EACzBC,SAAU,CACRC,KAAM,eACNC,OAAQ,CACNC,KAAM,SAIVC,yBAAyB,EACzBC,kBAAmB,CACjBC,MAAO,gCAETC,YAAa,WACX,IAAIC,EAAUpC,aAAaC,QAAQ,WAC/BoC,EAAQ,CACVC,OAAQtB,EACRuB,QAASH,GAEXI,IACGC,KAAK,qBAAsBJ,GAC3BK,MAAK,SAACC,GACLC,QAAQC,IAAI,sBAAuBF,MAEpCG,OAAM,SAACC,GACNH,QAAQC,IAAIE,EAAIC,SAASC,YAG9B,2CACJ,gBA/DY,sCAiEb,OACE,uBAAKC,UAAU,aACb,uBACEA,UAAU,kCACVC,IAAK1C,EACL2C,MAAO,CAAEC,MAAO,QAASC,OAAQ","file":"static/js/183.0d5cff7f.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\n\r\nimport * as React from \"react\";\r\n// import React, { useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import './style.css';\r\n// import { getUserID } from \"../astrologerdetail\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\r\n\r\nfunction randomID(len) {\r\n  let result = \"\";\r\n  if (result) return result;\r\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\r\n    maxPos = chars.length,\r\n    i;\r\n  len = len || 5;\r\n  for (i = 0; i < len; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * maxPos));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function getUrlParams(url = window.location.href) {\r\n  // let urlStr = url.split(\"?\")[1];\r\n  let urlStr = url.split(\"/\")[7];\r\n  return new URLSearchParams(urlStr);\r\n}\r\n\r\nexport default function App() {\r\n  const astroName = localStorage.getItem(\"astroData\");\r\n  let name = astroName?.fullname;\r\n  let room = window.location.href.split(\"/\")[7];\r\n  const roomID = getUrlParams().get(\"roomID\") || room || randomID(5);\r\n  const astroname = name || randomID(5).toString();\r\n  let myMeeting = async (element) => {\r\n    // generate Kit Token\r\n    const appID = 1011009319;\r\n    // const response = getUserID();\r\n    const serverSecret = \"0b7c5477f07346c1a906c99d3f171f2e\";\r\n    //  console.log(window.location.pathname)\r\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\r\n      appID,\r\n      serverSecret,\r\n      roomID,\r\n      randomID(5).toString(),\r\n      astroname\r\n    );\r\n\r\n    // Create instance object from Kit Token.\r\n    const zp = ZegoUIKitPrebuilt.create(kitToken);\r\n    let userID = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    // start the call\r\n    zp.joinRoom({\r\n      maxUsers: 2,\r\n      container: element,\r\n      useFrontFacingCamera: false,\r\n      sharedLinks: [\r\n        {\r\n          name: \"Personal link\",\r\n          url:\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            \"/#/VideoCall\" +\r\n            window.location.pathname +\r\n            \"?roomID=\" +\r\n            roomID,\r\n        },\r\n      ],\r\n      turnOnCameraWhenJoining: false,\r\n      scenario: {\r\n        mode: \"OneONoneCall\",\r\n        config: {\r\n          role: \"Host\",\r\n        },\r\n      },\r\n\r\n      showScreenSharingButton: true,\r\n      preJoinViewConfig: {\r\n        title: \"Join AstroGyata Meeting Room\",\r\n      },\r\n      onUserLeave: () => {\r\n        let astroid = localStorage.getItem(\"astroId\");\r\n        let value = {\r\n          userId: userID,\r\n          astroId: astroid,\r\n        };\r\n        axiosConfig\r\n          .post(`/user/changeStatus`, value)\r\n          .then((res) => {\r\n            console.log(\"Astro CloneJob Stop\", res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response.data);\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"myCallContainer pt-3  container\"\r\n        ref={myMeeting}\r\n        style={{ width: \"100vw\", height: \"100vh\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}