{"version":3,"sources":["components/reactstrap/modal/ModalSourceCode.js","components/reactstrap/modal/ModalBasic.js","components/reactstrap/modal/ModalCentered.js","components/reactstrap/modal/ModalBackdrop.js","components/reactstrap/modal/ModalFade.js","components/reactstrap/modal/ModalThemes.js","components/reactstrap/modal/ModalSizes.js","components/reactstrap/modal/ModalForm.js","components/reactstrap/modal/ModalDestructuring.js","components/reactstrap/modal/ModalFocus.js","components/reactstrap/modal/Modal.js"],"names":["modalBasic","className","modalCentered","modalBackdrop","modalFade","modalTheme","modalSizes","modalForm","modalDestructuring","modalFocus","ModalBasic","state","activeTab","modal","toggleTab","tab","setState","toggleModal","prevState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","Button","Ripple","color","outline","block","Modal","isOpen","toggle","props","ModalHeader","ModalBody","ModalFooter","React","Component","ModalCentered","ModalBackdrop","backdrop","ModalFade","fade","Alert","ModalConfig","id","title","bgColor","btnColor","ModalTheme","renderModal","map","item","key","btnTitle","modalTitle","modalClass","ModalSizes","ModalForm","FormGroup","Label","for","Input","type","placeholder","ModalDestructuring","unmountOnClose","changeUnmountOnClose","e","value","target","JSON","parse","Form","inline","onSubmit","preventDefault","name","onChange","rows","ModalFocus","focusAfterClose","handleSelectChange","alert","returnFocusAfterClose","Modals","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","lg","md","sm","ModalThemes"],"mappings":"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","file":"static/js/166.57d84f84.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const modalBasic = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class ModalBasic extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            Basic Modal\n          </ModalHeader>\n          <ModalBody>\n            <h5>Check First Paragraph</h5>\n            Oat cake ice cream candy chocolate cake chocolate cake\n            cotton candy dragée apple pie. Brownie carrot cake candy\n            canes bonbon fruitcake topping halvah. Cake sweet roll cake\n            cheesecake cookie chocolate cake liquorice.\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleModal}>\n              Accept\n            </Button>{\" \"}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n  }\n  export default ModalBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalCentered = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class ModalBasic extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Vertically Centered\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n          Oat cake ice cream candy chocolate cake chocolate cake\n          cotton candy dragée apple pie. Brownie carrot cake candy\n          canes bonbon fruitcake topping halvah. Cake sweet roll cake\n          cheesecake cookie chocolate cake liquorice.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default ModalBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalBackdrop = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalBackdrop extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n        backdrop={false}\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Vertically Centered\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n          Candy oat cake topping topping chocolate cake. Icing pudding\n          jelly beans I love chocolate carrot cake wafer candy canes.\n          Biscuit croissant fruitcake bonbon soufflé.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalBackdrop\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalFade = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalFade extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n        fade={false}\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Vertically Centered\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n          Candy oat cake topping topping chocolate cake. Icing pudding\n          jelly beans I love chocolate carrot cake wafer candy canes.\n          Biscuit croissant fruitcake bonbon soufflé.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalFade\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalTheme = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalTheme extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"primary\"\n        className=\"btn-block\"\n        size=\"lg\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={this.toggleModal} className=\"bg-primary\">\n          Primary\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n        Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing.\n        Pudding jelly beans carrot cake pastry gummies cheesecake lollipop.\n        I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalTheme\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalSizes = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class modalSizes extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n        <Button\n        color=\"warning\"\n        outline\n        onClick={this.toggleModal}\n      >\n        Large Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered modal-lg\"\n      >\n        <ModalHeader toggle={this.toggleModal} className=\"bg-primary\">\n        Large Modal\n        </ModalHeader>\n        <ModalBody className=\"modal-dialog-centered\">\n        Halvah powder wafer. Chupa chups pie topping carrot cake cake.\n        Tootsie roll sesame snaps jelly-o marshmallow marshmallow jelly jujubes candy.\n        Chupa chups cheesecake gingerbread chupa chups cake candy canes sweet roll.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Accept\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default modalSizes\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalForm = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n  } from \"reactstrap\"\n\n  class ModalForm extends React.Component {\n\n    state = {\n      modal: false\n    }\n\n    toggleModal = () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }))\n    }\n\n    render() {\n      return(\n      <Button color=\"success\" outline onClick={this.toggleModal}>\n        Launch Modal\n      </Button>\n      <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggleModal}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={this.toggleModal}>\n          Login Form\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"email\">Email:</Label>\n            <Input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email Address\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Password:</Label>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n            />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleModal}>\n            Login\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n      )\n    }\n  }\n  export default ModalForm\n  `}\n    </code>\n  </pre>\n)\n\nexport const modalDestructuring = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap'\n\nclass ModalExample extends React.Component {\n\n  state = {\n    modal: false,\n    unmountOnClose: true\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  changeUnmountOnClose = e => {\n    let value = e.target.value\n    this.setState({ unmountOnClose: JSON.parse(value) })\n  }\n\n    render() {\n        return (\n          <Form inline onSubmit={e => e.preventDefault()}>\n            <FormGroup>\n              <Label for=\"unmountOnClose\">UnmountOnClose value</Label>{\" \"}\n              <Input\n                type=\"select\"\n                name=\"unmountOnClose\"\n                id=\"unmountOnClose\"\n                onChange={this.changeUnmountOnClose}\n              >\n                <option value=\"true\">true</option>\n                <option value=\"false\">false</option>\n              </Input>\n            </FormGroup>{\" \"}\n            <Button color=\"success\" outline onClick={this.toggleModal}>\n              Launch modal\n            </Button>\n          </Form>\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggleModal}\n            className={this.props.className}\n            unmountOnClose={this.state.unmountOnClose}\n          >\n            <ModalHeader toggle={this.toggleModal}>\n              Modal title\n            </ModalHeader>\n            <ModalBody>\n              <Input\n                type=\"textarea\"\n                placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\"\n                rows={5}\n              />\n            </ModalBody>\n            <ModalFooter>\n              <Button outline color=\"primary\" onClick={this.toggleModal}>\n                Accept\n              </Button>{\" \"}\n            </ModalFooter>\n          </Modal>\n        )\n    }\n}\n\nexport default ModalExample\n        `}\n    </code>\n  </pre>\n)\n\nexport const modalFocus = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap'\n\nclass ModalFocus extends React.Component {\n\n  state = {\n    modal: false,\n    focusAfterClose: true\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  handleSelectChange({ target: { value } }) {\n    this.setState({ focusAfterClose: JSON.parse(value) })\n  }\n\n    render() {\n        return (\n          <Form inline onSubmit={e => e.preventDefault()}>\n            <FormGroup>\n              <Label for=\"focusAfterClose\" className=\"mr-1\">\n                Focus After Close\n              </Label>{\" \"}\n              <Input\n                type=\"select\"\n                name=\"focusAfterClose\"\n                id=\"focusAfterClose\"\n                onChange={this.handleSelectChange}\n              >\n                <option value=\"true\">Yes</option>\n                <option value=\"fasle\">No</option>\n              </Input>\n            </FormGroup>{\" \"}\n          <Button\n            color=\"success\"\n            className=\"ml-1\"\n            outline\n            onClick={this.toggleModal}\n          >\n            Launch modal\n          </Button>\n        </Form>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className={this.props.className}\n          returnFocusAfterClose={this.state.focusAfterClose}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            Modal title\n          </ModalHeader>\n          <ModalBody>\n            <Input\n              type=\"textarea\"\n              placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\"\n              rows={5}\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" outline onClick={this.toggleModal}>\n              Accept\n            </Button>{\" \"}\n          </ModalFooter>\n        </Modal>\n        )\n    }\n}\n\nexport default ModalFocus\n        `}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalBasic } from \"./ModalSourceCode\"\n\nclass ModalBasic extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Basic Modal</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>Modal</code>, <code>ModalBody</code> and{\" \"}\n              <code>ModalFooter</code> tags to create a Modal with reactstrap.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button.Ripple\n                  color=\"primary\"\n                  className=\"btn-block\"\n                  size=\"lg\"\n                  outline\n                  block\n                  onClick={this.toggleModal}\n                >\n                  Launch Modal\n                </Button.Ripple>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className={this.props.className}\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Basic Modal\n                  </ModalHeader>\n                  <ModalBody>\n                    <h5>Check First Paragraph</h5>\n                    Oat cake ice cream candy chocolate cake chocolate cake\n                    cotton candy dragée apple pie. Brownie carrot cake candy\n                    canes bonbon fruitcake topping halvah. Cake sweet roll cake\n                    cheesecake cookie chocolate cake liquorice.\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.toggleModal}>\n                      Accept\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalBasic}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalBasic\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalCentered } from \"./ModalSourceCode\"\n\nclass ModalCentered extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Vertically Centered</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.modal-dialog-centered</code> with{\" \"}\n              <code>Modal</code> tag to vertically center modal.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button.Ripple\n                  color=\"primary\"\n                  className=\"btn-block\"\n                  size=\"lg\"\n                  outline\n                  block\n                  onClick={this.toggleModal}\n                >\n                  Launch Modal\n                </Button.Ripple>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className=\"modal-dialog-centered\"\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Vertically Centered\n                  </ModalHeader>\n                  <ModalBody>\n                    Oat cake ice cream candy chocolate cake chocolate cake\n                    cotton candy dragée apple pie. Brownie carrot cake candy\n                    canes bonbon fruitcake topping halvah. Cake sweet roll cake\n                    cheesecake cookie chocolate cake liquorice.\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.toggleModal}>\n                      Accept\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalCentered}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalCentered\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalBackdrop } from \"./ModalSourceCode\"\n\nclass ModalBackdrop extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Disabled Backdrop</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>backdrop</code> attribute to enable or disable modal\n              backdrop.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button.Ripple\n                  color=\"primary\"\n                  className=\"btn-block\"\n                  size=\"lg\"\n                  outline\n                  block\n                  onClick={this.toggleModal}\n                >\n                  Launch Modal\n                </Button.Ripple>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className=\"modal-dialog-centered\"\n                  backdrop={false}\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Disabled Backdrop\n                  </ModalHeader>\n                  <ModalBody>\n                    Candy oat cake topping topping chocolate cake. Icing pudding\n                    jelly beans I love chocolate carrot cake wafer candy canes.\n                    Biscuit croissant fruitcake bonbon soufflé.\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.toggleModal}>\n                      Accept\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalBackdrop}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalBackdrop\n","import React from \"react\"\nimport {\n  Alert,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalFade } from \"./ModalSourceCode\"\n\nclass ModalFade extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Disabled Animation</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>fade</code> attribute to enable or disable modal fade.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button.Ripple\n                  color=\"primary\"\n                  className=\"btn-block\"\n                  size=\"lg\"\n                  block\n                  outline\n                  onClick={this.toggleModal}\n                >\n                  Launch Modal\n                </Button.Ripple>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className=\"modal-dialog-centered\"\n                  fade={false}\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Disabled Fade\n                  </ModalHeader>\n                  <ModalBody>\n                    Chocolate bar jelly dragée cupcake chocolate bar I love\n                    donut liquorice. Powder I love marzipan donut candy canes\n                    jelly-o. Dragée liquorice apple pie candy biscuit danish\n                    lemon drops sugar plum.\n                    <Alert className=\"mt-1\" color=\"success\">\n                      <span>\n                        Well done! You successfully read this important alert\n                        message.\n                      </span>\n                    </Alert>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.toggleModal}>\n                      Accept\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalFade}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalFade\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalTheme } from \"./ModalSourceCode\"\n\nconst ModalConfig = [\n  {\n    id: 1,\n    title: \"Primary\",\n    bgColor: \"bg-primary\",\n    btnColor: \"primary\"\n  },\n  {\n    id: 2,\n    title: \"Success\",\n    bgColor: \"bg-success\",\n    btnColor: \"success\"\n  },\n  {\n    id: 3,\n    title: \"Info\",\n    bgColor: \"bg-info\",\n    btnColor: \"info\"\n  },\n  {\n    id: 4,\n    title: \"Danger\",\n    bgColor: \"bg-danger\",\n    btnColor: \"danger\"\n  },\n  {\n    id: 5,\n    title: \"Warning\",\n    bgColor: \"bg-warning\",\n    btnColor: \"warning\"\n  },\n  {\n    id: 6,\n    title: \"Dark\",\n    bgColor: \"bg-dark\",\n    btnColor: \"dark\"\n  }\n]\n\nclass ModalTheme extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: null\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = id => {\n    if (this.state.modal !== id) {\n      this.setState({\n        modal: id\n      })\n    } else {\n      this.setState({\n        modal: null\n      })\n    }\n  }\n\n  render() {\n    const renderModal = ModalConfig.map(item => {\n      return (\n        <React.Fragment key={item.id}>\n          <div className=\"d-inline-block mr-1 mb-1\">\n            <Button.Ripple\n              color={item.btnColor}\n              onClick={() => this.toggleModal(item.id)}\n              key={item.title}\n              outline\n            >\n              {item.title}\n            </Button.Ripple>\n          </div>\n          <Modal\n            isOpen={this.state.modal === item.id}\n            toggle={() => this.toggleModal(item.id)}\n            className=\"modal-dialog-centered\"\n            key={item.id}\n          >\n            <ModalHeader\n              toggle={() => this.toggleModal(item.id)}\n              className={item.bgColor}\n            >\n              {item.title}\n            </ModalHeader>\n            <ModalBody>\n              Tart lemon drops macaroon oat cake chocolate toffee chocolate bar\n              icing. Pudding jelly beans carrot cake pastry gummies cheesecake\n              lollipop. I love cookie lollipop cake I love sweet gummi bears\n              cupcake dessert.\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color={item.btnColor}\n                onClick={() => this.toggleModal(item.id)}\n              >\n                Accept\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </React.Fragment>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Modal Themes</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.bg-*</code> with <code>ModalHeader</code> to\n              change modal theme.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">{renderModal}</TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalTheme}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalTheme\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalSizes } from \"./ModalSourceCode\"\n\nconst ModalConfig = [\n  {\n    id: 1,\n    btnTitle: \"Extra Small\",\n    modalTitle: \"Extra Small modal\",\n    modalClass: \"modal-xs\"\n  },\n  {\n    id: 2,\n    btnTitle: \"Small Modal\",\n    modalTitle: \"Small Modal\",\n    modalClass: \"modal-sm\"\n  },\n  {\n    id: 3,\n    btnTitle: \"Default Modal\",\n    modalTitle: \"Default Modal\",\n    modalClass: \"\"\n  },\n  {\n    id: 4,\n    btnTitle: \"Large Modal\",\n    modalTitle: \"Large Modal\",\n    modalClass: \"modal-lg\"\n  },\n  {\n    id: 5,\n    btnTitle: \"Extra Large Modal\",\n    modalTitle: \"Extra Large Modal\",\n    modalClass: \"modal-xl\"\n  }\n]\n\nclass ModalSizes extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: null\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = id => {\n    if (this.state.modal !== id) {\n      this.setState({\n        modal: id\n      })\n    } else {\n      this.setState({\n        modal: null\n      })\n    }\n  }\n\n  render() {\n    const renderModal = ModalConfig.map(item => {\n      return (\n        <React.Fragment key={item.id}>\n          <div className=\"d-inline-block mr-1 mb-1\">\n            <Button.Ripple\n              color=\"warning\"\n              onClick={() => this.toggleModal(item.id)}\n              key={item.title}\n              outline\n            >\n              {item.btnTitle}\n            </Button.Ripple>\n          </div>\n          <Modal\n            isOpen={this.state.modal === item.id}\n            toggle={() => this.toggleModal(item.id)}\n            className={`modal-dialog-centered ${item.modalClass}`}\n            key={item.id}\n          >\n            <ModalHeader toggle={() => this.toggleModal(item.id)}>\n              {item.modalTitle}\n              {item.title}\n            </ModalHeader>\n            <ModalBody>\n              Halvah powder wafer. Chupa chups pie topping carrot cake cake.\n              Tootsie roll sesame snaps jelly-o marshmallow marshmallow jelly\n              jujubes candy. Chupa chups cheesecake gingerbread chupa chups cake\n              candy canes sweet roll.\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color=\"primary\"\n                onClick={() => this.toggleModal(item.id)}\n                outline\n              >\n                Accept\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </React.Fragment>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Modal Sizes</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.modal-[xs/sm/lg/xl]</code> with{\" \"}\n              <code>ModalHeader</code> to change modal Size.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">{renderModal}</TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalSizes}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalSizes\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  FormGroup,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalForm } from \"./ModalSourceCode\"\n\nclass ModalForm extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Form Components</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <h5>Login Form</h5>\n            <p>Created Simple Login Form.</p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button.Ripple\n                  color=\"success\"\n                  outline\n                  onClick={this.toggleModal}\n                >\n                  Launch Modal\n                </Button.Ripple>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className=\"modal-dialog-centered\"\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Login Form\n                  </ModalHeader>\n                  <ModalBody>\n                    <FormGroup>\n                      <Label for=\"email\">Email:</Label>\n                      <Input\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"Email Address\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"password\">Password:</Label>\n                      <Input\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password\"\n                      />\n                    </FormGroup>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.toggleModal}>\n                      Login\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalForm}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalForm\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Input,\n  Label,\n  Form,\n  FormGroup\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalDestructuring } from \"./ModalSourceCode\"\n\nclass ModalDestructuring extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false,\n    unmountOnClose: true\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  changeUnmountOnClose = e => {\n    let value = e.target.value\n    this.setState({ unmountOnClose: JSON.parse(value) })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Unmount On Close</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Write something (data should remain in modal if unmountOnClose is\n              set to false).\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Form inline onSubmit={e => e.preventDefault()}>\n                  <FormGroup>\n                    <Label for=\"unmountOnClose\" className=\"mr-1\">\n                      UnmountOnClose value\n                    </Label>{\" \"}\n                    <Input\n                      type=\"select\"\n                      name=\"unmountOnClose\"\n                      id=\"unmountOnClose\"\n                      onChange={this.changeUnmountOnClose}\n                    >\n                      <option value=\"true\">true</option>\n                      <option value=\"false\">false</option>\n                    </Input>\n                  </FormGroup>{\" \"}\n                  <Button.Ripple\n                    color=\"success\"\n                    className=\"ml-1\"\n                    outline\n                    onClick={this.toggleModal}\n                  >\n                    Launch modal\n                  </Button.Ripple>\n                </Form>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className={this.props.className}\n                  unmountOnClose={this.state.unmountOnClose}\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Modal title\n                  </ModalHeader>\n                  <ModalBody>\n                    <Input\n                      type=\"textarea\"\n                      placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\"\n                      rows={5}\n                    />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" outline onClick={this.toggleModal}>\n                      Accept\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalDestructuring}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalDestructuring\n","import React from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Input,\n  Label,\n  Form,\n  FormGroup\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { modalFocus } from \"./ModalSourceCode\"\n\nclass ModalFocus extends React.Component {\n  state = {\n    activeTab: \"1\",\n    modal: false,\n    focusAfterClose: true\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  handleSelectChange = ({ target: { value } }) => {\n    this.setState({ focusAfterClose: JSON.parse(value) })\n    if (this.state.focusAfterClose === true) {\n      alert(\"true\")\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Focus After Close</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>Observe the button. It will be focused after close.</p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Form\n                  inline\n                  onSubmit={e => e.preventDefault()}\n                  className=\"demo-modal-form\"\n                >\n                  <FormGroup>\n                    <Label for=\"focusAfterClose\" className=\"mr-1\">\n                      Focus After Close\n                    </Label>{\" \"}\n                    <Input\n                      type=\"select\"\n                      name=\"focusAfterClose\"\n                      id=\"focusAfterClose\"\n                      onChange={this.handleSelectChange}\n                    >\n                      <option value=\"true\">Yes</option>\n                      <option value=\"fasle\">No</option>\n                    </Input>\n                  </FormGroup>{\" \"}\n                  <Button.Ripple\n                    color=\"success\"\n                    className=\"ml-1\"\n                    outline\n                    onClick={this.toggleModal}\n                  >\n                    Launch modal\n                  </Button.Ripple>\n                </Form>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className={this.props.className}\n                  returnFocusAfterClose={this.state.focusAfterClose}\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Modal title\n                  </ModalHeader>\n                  <ModalBody>\n                    <Input\n                      type=\"textarea\"\n                      placeholder=\"Observe the button. It will be focused after close.\"\n                      rows={5}\n                    />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" outline onClick={this.toggleModal}>\n                      Accept\n                    </Button>{\" \"}\n                  </ModalFooter>\n                </Modal>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {modalFocus}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ModalFocus\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport ModalBasic from \"./ModalBasic\"\nimport ModalCentered from \"./ModalCentered\"\nimport ModalBackdrop from \"./ModalBackdrop\"\nimport ModalFade from \"./ModalFade\"\nimport ModalThemes from \"./ModalThemes\"\nimport ModalSizes from \"./ModalSizes\"\nimport ModalForm from \"./ModalForm\"\nimport ModalUnmount from \"./ModalDestructuring\"\nimport ModalFocus from \"./ModalFocus\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Modals extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Modal\"\n          breadCrumbParent=\"Components\"\n          breadCrumbActive=\"Modal\"\n        />\n        <Row>\n          <Col lg=\"3\" md=\"6\" sm=\"12\">\n            <ModalBasic />\n          </Col>\n          <Col lg=\"3\" md=\"6\" sm=\"12\">\n            <ModalCentered />\n          </Col>\n          <Col lg=\"3\" md=\"6\" sm=\"12\">\n            <ModalBackdrop />\n          </Col>\n          <Col lg=\"3\" md=\"6\" sm=\"12\">\n            <ModalFade />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\">\n            <ModalThemes />\n          </Col>\n          <Col sm=\"12\">\n            <ModalSizes />\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <ModalUnmount />\n          </Col>\n          <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <ModalForm />\n          </Col>\n          <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <ModalFocus />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Modals\n"],"sourceRoot":""}