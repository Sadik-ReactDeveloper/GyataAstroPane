{"version":3,"sources":["views/pages/authentication/login/LoginJWT.js","views/apps/calls/Streaming.js","views/apps/calls/LiveStreaming.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["LoginJWT","props","handlechange","e","setState","target","name","value","handleSignUp","window","location","replace","handleLogin","preventDefault","axiosConfig","post","mobile","state","then","response","console","log","data","otpMsg","msg","swal","catch","error","handleOtp","otp","localStorage","setItem","_id","JSON","stringify","Fragment","this","className","onSubmit","type","required","placeholder","maxLength","onChange","render","history","Ripple","color","countryCodeEditable","country","mobileError","style","cursor","onClick","React","Component","connect","values","auth","login","loginWithJWT","randomID","len","result","i","chars","maxPos","length","charAt","Math","floor","random","App","roomID","url","href","urlStr","split","URLSearchParams","getUrlParams","get","role","ZegoUIKitPrebuilt","Host","sharedLinks","Cohost","push","protocol","host","pathname","userName","kitToken","generateKitTokenForTest","myMeeting","element","create","joinRoom","container","useFrontFacingCamera","scenario","mode","LiveStreaming","config","ref","width","height","Demo2","onValueChange","bind","selectedOption","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/103.27ed99a6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Phone } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n// import { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nclass LoginJWT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mobile: \"\",\r\n      otpMsg: \"\",\r\n      otp: \"\",\r\n    };\r\n  }\r\n  handlechange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSignUp = (e) => {\r\n    window.location.replace(\"/#/pages/register\");\r\n  };\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(\"/user/loginsendotp\", {\r\n        mobile: this.state.mobile,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({ otpMsg: response.data.msg });\r\n        if (response.data.msg === \"Waiting for Admin Approval\") {\r\n          swal(\"Waiting for Admin Approval\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        swal(\r\n          \"error!\",\r\n          \"Invalied! Please enter valied Phone No. or Password\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n  handleOtp = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(\"/user/loginVerify\", {\r\n        mobile: this.state.mobile,\r\n        otp: this.state.otp,\r\n      })\r\n\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        // console.log(response.data._id);\r\n        if (response.data.msg === \"otp verified\") {\r\n          swal(\"Login Successfull\");\r\n          localStorage.setItem(\"astroId\", response.data._id);\r\n          localStorage.setItem(\"astroData\", JSON.stringify(response.data));\r\n          // localStorage.setItem(\"user_id\", response.data.data._id);\r\n          // this.props.history.push(\"/\");\r\n          window.location.replace(\"/#/\");\r\n          // swal(\"Login Successfull\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data._id);\r\n        swal(\r\n          \"error!\",\r\n          \"Invalied! Please enter valied Phone No. or Password\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.otpMsg === \"otp Send Successfully\" ? (\r\n          <CardBody className=\"pt-1\">\r\n            <Form onSubmit={this.handleOtp}>\r\n              <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"otp\"\r\n                  required\r\n                  placeholder=\"Enter OTP\"\r\n                  maxLength={6}\r\n                  value={this.state.otp}\r\n                  onChange={this.handlechange}\r\n                  // required\r\n                />\r\n\r\n                <Label>OTP*</Label>\r\n              </FormGroup>\r\n\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button.Ripple color=\"primary\" type=\"submit\">\r\n                      Login\r\n                    </Button.Ripple>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        ) : (\r\n          <CardBody className=\"pt-1\">\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                <div className=\"form-group mtb-10\">\r\n                  <Label>Mobile Number*</Label>\r\n                  <PhoneInput\r\n                    countryCodeEditable={false}\r\n                    className=\"mob-int\"\r\n                    country={\"in\"}\r\n                    value={this.state.mobile}\r\n                    onChange={(mobile) => {\r\n                      this.setState({ mobile: mobile });\r\n                    }}\r\n                  />\r\n                  {this.state.mobileError !== \"\" ? (\r\n                    <span style={{ color: \"red\" }}>\r\n                      {this.state.mobileError}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n                {/* </Col> */}\r\n              </FormGroup>\r\n\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button.Ripple color=\"primary\" type=\"submit\">\r\n                      Get OTP\r\n                    </Button.Ripple>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Form>\r\n\r\n            <div className=\"d-flex mt-2\">\r\n              <div>New On Our PlatForm </div>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <div\r\n                    className=\"ml-1\"\r\n                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                    onClick={this.handleSignUp}\r\n                  >\r\n                    Sign up\r\n                  </div>\r\n                )}\r\n              />\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <button color=\"primary\" type=\"submit\">\r\n                    Sign up\r\n                  </button>\r\n                )}\r\n              /> */}\r\n            </div>\r\n          </CardBody>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n// export function getastroID() {\r\n//   const name = JSON.parse(localStorage.getItem(\"astroData\"));\r\n//   const astroname = name.fullname;\r\n//   return astroname;\r\n// }\r\n","// import React, { Component } from \"react\";\r\n\r\n// class Demo2 extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       name: \"React\",\r\n//     };\r\n//     this.onValueChange = this.onValueChange.bind(this);\r\n//     this.formSubmit = this.formSubmit.bind(this);\r\n//   }\r\n\r\n//   onValueChange(event) {\r\n//     this.setState({\r\n//       selectedOption: event.target.value,\r\n//     });\r\n//   }\r\n\r\n//   formSubmit(event) {\r\n//     event.preventDefault();\r\n//     console.log(this.state.selectedOption);\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.formSubmit}>\r\n//         <div className=\"radio\">\r\n//           <label>\r\n//             <input\r\n//               type=\"radio\"\r\n//               value=\"Available\"\r\n//               checked={this.state.selectedOption === \"Available\"}\r\n//               onChange={this.onValueChange}\r\n//             />\r\n//             Available\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"radio\">\r\n//           <label>\r\n//             <input\r\n//               type=\"radio\"\r\n//               value=\"unavailable\"\r\n//               checked={this.state.selectedOption === \"unavailable\"}\r\n//               onChange={this.onValueChange}\r\n//             />\r\n//             Unavailable\r\n//           </label>\r\n//         </div>\r\n\r\n//         <button className=\"btn btn-primary\" type=\"submit\">\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Demo2;\r\nimport * as React from \"react\";\r\nimport { getastroID } from \"../../pages/authentication/login/LoginJWT\";\r\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\r\nimport \"../../../assets/scss/pages/live-streaming.scss\";\r\n\r\nfunction randomID(len) {\r\n  let result = \"\";\r\n  if (result) return result;\r\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\r\n    maxPos = chars.length,\r\n    i;\r\n  len = len || 5;\r\n  for (i = 0; i < len; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * maxPos));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function getUrlParams(url = window.location.href) {\r\n  let urlStr = url.split(\"?\")[1];\r\n  return new URLSearchParams(urlStr);\r\n}\r\n\r\nexport default function App() {\r\n  const roomID = getUrlParams().get(\"roomID\") || randomID(5);\r\n  console.log(\"Room\", roomID);\r\n  let role_str = \"Host\";\r\n  // getUrlParams(window.location.href).get(\"role\") || \"Host\";\r\n  const role = ZegoUIKitPrebuilt.Host;\r\n  console.log(\"role\", role);\r\n  // role_str === \"Host\"\r\n  // :\r\n  // role_str === \"Cohost\"\r\n  // ? ZegoUIKitPrebuilt.Cohost\r\n  // : ZegoUIKitPrebuilt.Audience;\r\n\r\n  let sharedLinks = [];\r\n  if (role === ZegoUIKitPrebuilt.Host || role === ZegoUIKitPrebuilt.Cohost) {\r\n    sharedLinks.push({\r\n      name: \"Join as co-host\",\r\n      url:\r\n        window.location.protocol +\r\n        \"//\" +\r\n        window.location.host +\r\n        window.location.pathname +\r\n        \"?roomID=\" +\r\n        roomID +\r\n        \"&role=Cohost\",\r\n    });\r\n  }\r\n  sharedLinks.push({\r\n    name: \"Join as audience\",\r\n    url:\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname +\r\n      \"?roomID=\" +\r\n      roomID +\r\n      \"&role=Audience\",\r\n  });\r\n  // generate Kit Token\r\n  const appID = 912338888;\r\n  const userName = randomID(5);\r\n  // const astrodetails = getastroID();\r\n  const serverSecret = \"2d117c2d3654bbba1611b3631f5ba758\";\r\n  const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\r\n    appID,\r\n    serverSecret,\r\n    roomID,\r\n    randomID(5),\r\n    userName\r\n\r\n    // astrodetails\r\n  );\r\n  console.log(roomID);\r\n  // start the call\r\n  let myMeeting = async (element) => {\r\n    // Create instance object from Kit Token.\r\n    const zp = ZegoUIKitPrebuilt.create(kitToken);\r\n    // start the call\r\n\r\n    zp.joinRoom({\r\n      container: element,\r\n      useFrontFacingCamera: false,\r\n      scenario: {\r\n        mode: ZegoUIKitPrebuilt.LiveStreaming,\r\n        config: {\r\n          role,\r\n        },\r\n      },\r\n      sharedLinks,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"myCallContainer \"\r\n        ref={myMeeting}\r\n        style={{ width: \"100vw\", height: \"100vh\" }}\r\n      ></div>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Streaming from \"./Streaming\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\nclass Demo2 extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n    };\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    // this.formSubmit = this.formSubmit.bind(this);\r\n  }\r\n\r\n  onValueChange = () => {\r\n    // alert(\"check\");\r\n    // console.log(event);\r\n    // if (event.target.value === \"unavailable\") {\r\n    //   window.location.reload();\r\n    // }\r\n    // else {\r\n    //   axiosConfig\r\n    //     .post(``)\r\n    //     .then((res) => {\r\n    //       console.log(res);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(error);\r\n    //     });\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              name=\"name\"\r\n              type=\"radio\"\r\n              value=\"Available\"\r\n              // checked={this.state.selectedOption === \"Available\"}\r\n              onClick={(e) => {\r\n                this.setState({ selectedOption: e.target.value });\r\n                this.onValueChange();\r\n              }}\r\n            />\r\n            Available\r\n          </label>\r\n        </div>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              name=\"name\"\r\n              type=\"radio\"\r\n              value=\"unavailable\"\r\n              // checked={this.state.selectedOption === \"unavailable\"}\r\n              onClick={(e) => {\r\n                this.setState({ selectedOption: e.target.value });\r\n                this.onValueChange();\r\n              }}\r\n            />\r\n            Unavailable\r\n          </label>\r\n        </div>\r\n        {this.state.selectedOption === \"Available\" ? (\r\n          <>\r\n            <Streaming />\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo2;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}