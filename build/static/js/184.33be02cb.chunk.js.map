{"version":3,"sources":["views/apps/notification/NotificationList.js"],"names":["i","NotificationList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","filter","width","cellRendererFramework","params","className","data","desc","pinned","window","innerWidth","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","JSON","stringify","catch","error","console","log","id","this","Fragment","sm","render","history","push","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":";8XACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAkBA,IAGMC,EAAgB,iKAmHlB,OAnHkB,oCACpBC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAGhBC,WAAY,CAEZ,CACEC,WAAY,cACZC,MAAO,OACPC,QAAQ,EACRC,MAAO,IAEPC,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,4CACb,8BAAOD,EAAOE,KAAKC,SAK1B,CACGR,WAAY,UACZC,MAAO,YACPE,MAAO,IACPM,OAAQC,OAAOC,WAAa,KAAM,QAClCP,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,0BAkBb,kBAAC,IAAM,CACPA,UAAU,QACVM,KAAK,OACLC,MAAM,MACNC,QAAS,WACP,IAAIC,EAAe,EAAKC,QAAQC,kBAChC,EAAKC,gBAAgBb,EAAOE,KAAKY,KACjC,EAAKH,QAAQI,cAAc,CAAEC,OAAQN,YAQnD,EAwBAO,YAAc,SAACjB,GACb,EAAKW,QAAUX,EAAOkB,IACtB,EAAKC,cAAgBnB,EAAOoB,UAC5B,EAAKC,SAAS,CACZlC,eAAgB,EAAKwB,QAAQW,2BAA6B,EAC1DlC,YAAa,EAAKuB,QAAQY,wBAC1BC,WAAY,EAAKb,QAAQc,6BAE3B,EAEFC,kBAAoB,SAACC,GACnB,EAAKhB,QAAQiB,eAAeD,IAC5B,EAEFE,WAAa,SAACF,GACR,EAAKhB,UACP,EAAKA,QAAQmB,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACZlC,eAAgBwC,EAChBvC,YAAauC,MAGlB,EA2HA,OA3HA,8CA7CH,WAAqB,IAAD,OAClBK,IACGC,IAAI,0BACJC,MAAK,SAACC,GACL,IAAIlD,EAAUkD,EAASjC,KAAKA,KAC5BkC,KAAKC,UAAUpD,GACf,EAAKoC,SAAS,CAAEpC,eAEjBqD,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMJ,eAErB,oEACD,WAAsBO,GAAE,iEACN,OAAhBF,QAAQC,IAAIC,GAAI,SACVV,IACHC,IAAI,6BAAD,OAA8BS,IACjCR,MAAK,SAACC,GACLK,QAAQC,IAAIN,MACX,KAAD,sCACL,mDARA,IAQA,oBA4BD,WAAU,IAAD,OACP,EAA+CQ,KAAK3D,MAA5CC,EAAO,EAAPA,QAASS,EAAU,EAAVA,WAAYL,EAAa,EAAbA,cAC7B,OACE,kBAAC,IAAMuD,SAAQ,KAKb,kBAAC,IAAI,CAAC3C,UAAU,+BACd,kBAAC,IAAG,CAACA,UAAU,OACb,kBAAC,IAAG,KACF,wBAAI4C,GAAG,IAAI5C,UAAU,cAAY,sBAInC,kBAAC,IAAG,KACF,kBAAC,IAAK,CACJ6C,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACL9C,UAAU,8BACVQ,QAAS,kBACPsC,EAAQC,KAAK,uCACd,yBAQX,kBAAC,IAAQ,CAAC/C,UAAU,QACM,OAAvB0C,KAAK3D,MAAMC,QAAmB,KAC7B,yBAAKgB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAoB,CAACA,UAAU,mBAC9B,kBAAC,IAAc,CAACgD,IAAI,OACjBN,KAAKhC,QACFgC,KAAK3D,MAAMG,eACX,GAAKwD,KAAK3D,MAAMI,aACfuD,KAAK3D,MAAMI,YAAc,GAAI,IAAG,IACnC,IACDuD,KAAK3D,MAAMC,QAAQiE,OAClBP,KAAK3D,MAAMG,eAAiBwD,KAAK3D,MAAMI,YACzC,EACIuD,KAAK3D,MAAMG,eAAiBwD,KAAK3D,MAAMI,YACvCuD,KAAK3D,MAAMC,QAAQiE,OAAQ,IAAG,MAC9BP,KAAK3D,MAAMC,QAAQiE,OACvB,kBAAC,IAAW,CAACjD,UAAU,QAAQM,KAAM,MAEvC,kBAAC,IAAY,CAAC4C,OAAK,GACjB,kBAAC,IAAY,CACXF,IAAI,MACJxC,QAAS,kBAAM,EAAKoB,WAAW,MAAI,MAIrC,kBAAC,IAAY,CACXoB,IAAI,MACJxC,QAAS,kBAAM,EAAKoB,WAAW,MAAI,MAIrC,kBAAC,IAAY,CACXoB,IAAI,MACJxC,QAAS,kBAAM,EAAKoB,WAAW,OAAK,OAItC,kBAAC,IAAY,CACXoB,IAAI,MACJxC,QAAS,kBAAM,EAAKoB,WAAW,OAAK,UAO5C,yBAAK5B,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAK,CACJmD,YAAY,YACZC,SAAU,SAACC,GAAC,OAAK,EAAK5B,kBAAkB4B,EAAEC,OAAOC,QACjDA,MAAOb,KAAK3D,MAAMwE,SAGtB,yBAAKvD,UAAU,cACb,kBAAC,IAAOwD,OAAM,CACZjD,MAAM,UACNC,QAAS,kBAAM,EAAKE,QAAQ+C,oBAAkB,oBAOtD,kBAAC,IAAcC,SAAQ,MACpB,SAACC,GAAO,OACP,kBAAC,cAAW,CACVC,YAAa,GACbC,aAAa,WACbzE,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTgC,YAAa,EAAKA,YAClB8C,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZhF,mBAAoB,EAAKF,MAAME,mBAC/BiF,eAAe,SACfC,UAAuC,QAA5BR,EAAQ5E,MAAMqF,uBAU5C,EA9OmB,CAASC,IAAMC,WAgPtBxF","file":"static/js/184.33be02cb.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Col,\n  Row,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport { Route } from \"react-router-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\n\nclass NotificationList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n   \n    {\n      headerName: \"Descripiton\",\n      field: \"desc\",\n      filter: true,\n      width: 600,\n      // pinned: window.innerWidth > 992 ? \"left\" : false,\n      cellRendererFramework: (params) => {\n        return (\n          <div className=\"d-flex align-items-center cursor-pointer\">\n            <span>{params.data.desc}</span>\n          </div>\n        );\n      },\n    },\n     {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 200,\n        pinned: window.innerWidth > 992 ? \"right\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              {/* <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(\n                        \n                        `/app/about/EditAboutUs/${params.data._id}`\n                      )\n                    }\n                  />\n                )}\n              /> */}\n\n           \n              <Trash2\n              className=\"mr-50\"\n              size=\"25px\"\n              color=\"red\"\n              onClick={() => {\n                let selectedData = this.gridApi.getSelectedRows();\n                this.runthisfunction(params.data._id);\n                this.gridApi.updateRowData({ remove: selectedData });\n              }}\n            />\n          </div>\n          );\n        },\n      },\n  ],\n};\ncomponentDidMount() {\n  axiosConfig\n    .get(`/admin/allnotification`)\n    .then((response) => {\n      let rowData = response.data.data;\n      JSON.stringify(rowData);\n      this.setState({ rowData });\n    })\n    .catch((error) => {\n      console.log(error.response);\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig\n      .get(`/admin/deletenotification/${id}`)\n      .then((response) => {\n        console.log(response);\n      });\n  }\n\n  \n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <React.Fragment>\n        {/* <Breadcrumbs\n          breadCrumbTitle=\"Notification\"\n          breadCrumbParent=\"Forms & Tables\"\n          breadCrumbActive=\"Notification List\"/> */}\n        <Card className=\"overflow-hidden agGrid-card\">\n          <Row className=\"m-2\">\n            <Col>\n              <h1 sm=\"6\" className=\"float-left\">\n                Notification List\n              </h1>\n            </Col>\n            <Col>\n              <Route\n                render={({ history }) => (\n                  <Button\n                    className=\" btn btn-danger float-right\"\n                    onClick={() =>\n                      history.push(\"/app/notification/Addnotification\")\n                    }\n                  >\n                    Add Notification\n                  </Button>\n                )}\n              />\n            </Col>\n          </Row>\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                    <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {(context) => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nexport default NotificationList;"],"sourceRoot":""}