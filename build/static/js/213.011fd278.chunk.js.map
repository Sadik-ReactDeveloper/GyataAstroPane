{"version":3,"sources":["views/apps/userrequest/UserRequestList.js"],"names":["UserRideList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","userid","fullname","className","gender","dob","p_date_of_time","p_birthPlace","marital_status","occupation","topic_of_cnsrn","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","astroId","localStorage","getItem","console","log","axiosConfig","get","then","response","id","axios","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/213.011fd278.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Input,\r\n//   Row,\r\n//   Col,\r\n//   Button,\r\n//   UncontrolledDropdown,\r\n//   DropdownMenu,\r\n//   DropdownItem,\r\n//   DropdownToggle,\r\n// } from \"reactstrap\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\n// import axios from \"axios\";\r\n// import { ContextLayout } from \"../../../utility/context/Layout\";\r\n// import { AgGridReact } from \"ag-grid-react\";\r\n// import { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n// //import classnames from \"classnames\";\r\n// import \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import \"../../../assets/scss/pages/users.scss\";\r\n// import { Route } from \"react-router-dom\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\n// class UserRideList extends React.Component {\r\n//   state = {\r\n//     rowData: [],\r\n//     paginationPageSize: 20,\r\n//     currenPageSize: \"\",\r\n//     getPageSize: \"\",\r\n//     defaultColDef: {\r\n//       sortable: true,\r\n//       editable: true,\r\n//       resizable: true,\r\n//       suppressMenu: true,\r\n//     },\r\n//     columnDefs: [\r\n//       {\r\n//         headerName: \"S.No\",\r\n//         valueGetter: \"node.rowIndex + 1\",\r\n//         field: \"node.rowIndex + 1\",\r\n//         width: 100,\r\n//         filter: true,\r\n//         // checkboxSelection: true,\r\n//         // headerCheckboxSelectionFilteredOnly: true,\r\n//         // headerCheckboxSelection: true,\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Name\",\r\n//         field: \"fullname\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.userid?.fullname} </span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Gender\",\r\n//         field: \"gender\t\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.gender}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       // {\r\n//       //   headerName: \"Mobile No.\",\r\n//       //   field: \"mobile\",\r\n//       //   filter: true,\r\n//       //   width: 200,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <span>{params.data.userid?.mobile}</span>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       {\r\n//         headerName: \"DOB\",\r\n//         field: \"dob\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <span>{params.data.userid?.dob}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"Time Of Birth\",\r\n//         field: \"tym_of_birth\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.tym_of_birth}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Birth City\",\r\n//         field: \"birth_city\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.birth_city}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Birth State\",\r\n//         field: \"birth_state\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.birth_state}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Birth Country\",\r\n//         field: \"birth_country\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.birth_country}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"View BirthDetails\",\r\n//         field: \"birthdetails\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.birth_country}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Marital Status\",\r\n//         field: \"marital_status\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.marital_status}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Occupation\",\r\n//         field: \"occupation\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.occupation}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Topic of concern*\",\r\n//         field: \"topic_of_cnsrn\",\r\n//         filter: true,\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//               <span>{params.data.topic_of_cnsrn}</span>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"Actions\",\r\n//         field: \"sortorder\",\r\n//         width: 200,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"actions cursor-pointer\">\r\n//               {/* <Route render={({ history}) => (\r\n//               <Eye\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"green\"\r\n//                 onClick={() =>\r\n//                 history.push(`/app/userride/viewUserRide/${params.data._id}`       )\r\n//               }\r\n//             />\r\n//           )}\r\n//         /> */}\r\n//               {/* <Route render={({ history}) => (\r\n//               <Edit\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"blue\"\r\n//                 onClick={() => history.push(\"/app/userride/editUserRide\"  )\r\n//               }\r\n//             />\r\n//           )}\r\n//         /> */}\r\n//               <Trash2\r\n//                 className=\"mr-50\"\r\n//                 size=\"25px\"\r\n//                 color=\"red\"\r\n//                 onClick={() => {\r\n//                   let selectedData = this.gridApi.getSelectedRows();\r\n//                   this.runthisfunction(params.data._id);\r\n//                   this.gridApi.updateRowData({ remove: selectedData });\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//     ],\r\n//   };\r\n//   async componentDidMount() {\r\n//     let astroId = localStorage.getItem(\"astroId\");\r\n\r\n//     await axiosConfig\r\n//       .get(`/admin/get_chat_intake/${astroId}`)\r\n//       .then((response) => {\r\n//         let rowData = response.data.data;\r\n//         console.log(rowData);\r\n//         this.setState({ rowData });\r\n//       });\r\n//   }\r\n\r\n//   async runthisfunction(id) {\r\n//     console.log(id);\r\n//     await axios.get(`/${id}`).then(\r\n//       (response) => {\r\n//         console.log(response);\r\n//       },\r\n//       (error) => {\r\n//         console.log(error);\r\n//       }\r\n//     );\r\n//   }\r\n//   onGridReady = (params) => {\r\n//     this.gridApi = params.api;\r\n//     this.gridColumnApi = params.columnApi;\r\n//     this.setState({\r\n//       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n//       getPageSize: this.gridApi.paginationGetPageSize(),\r\n//       totalPages: this.gridApi.paginationGetTotalPages(),\r\n//     });\r\n//   };\r\n//   updateSearchQuery = (val) => {\r\n//     this.gridApi.setQuickFilter(val);\r\n//   };\r\n//   filterSize = (val) => {\r\n//     if (this.gridApi) {\r\n//       this.gridApi.paginationSetPageSize(Number(val));\r\n//       this.setState({\r\n//         currenPageSize: val,\r\n//         getPageSize: val,\r\n//       });\r\n//     }\r\n//   };\r\n//   render() {\r\n//     const { rowData, columnDefs, defaultColDef } = this.state;\r\n//     return (\r\n//       console.log(rowData),\r\n//       (\r\n//         <div>\r\n//           <Breadcrumbs\r\n//             breadCrumbTitle=\"Request User List\"\r\n//             breadCrumbParent=\"Home\"\r\n//             breadCrumbActive=\" Request User List \"\r\n//           />\r\n\r\n//           <Row className=\"app-user-list\">\r\n//             <Col sm=\"12\"></Col>\r\n//             <Col sm=\"12\">\r\n//               <Card>\r\n//                 <Row className=\"m-2\">\r\n//                   <Col>\r\n//                     <h1 sm=\"6\" className=\"float-left\">\r\n//                       Request User List\r\n//                     </h1>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Route\r\n//                       render={({ history }) => (\r\n//                         <Button\r\n//                           className=\" btn btn-success float-right\"\r\n//                           onClick={() => history.push(\"/app/user/addUser\")}\r\n//                         >\r\n//                           Add User\r\n//                         </Button>\r\n//                       )}\r\n//                     />\r\n//                   </Col>\r\n//                 </Row>\r\n//                 <CardBody>\r\n//                   {this.state.rowData === null ? null : (\r\n//                     <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n//                       <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n//                         <div className=\"mb-1\">\r\n//                           <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n//                             <DropdownToggle tag=\"div\">\r\n//                               {this.gridApi\r\n//                                 ? this.state.currenPageSize\r\n//                                 : \"\" * this.state.getPageSize -\r\n//                                   (this.state.getPageSize - 1)}{\" \"}\r\n//                               -{\" \"}\r\n//                               {this.state.rowData.length -\r\n//                                 this.state.currenPageSize *\r\n//                                   this.state.getPageSize >\r\n//                               0\r\n//                                 ? this.state.currenPageSize *\r\n//                                   this.state.getPageSize\r\n//                                 : this.state.rowData.length}{\" \"}\r\n//                               of {this.state.rowData.length}\r\n//                               <ChevronDown className=\"ml-50\" size={15} />\r\n//                             </DropdownToggle>\r\n//                             <DropdownMenu right>\r\n//                               <DropdownItem\r\n//                                 tag=\"div\"\r\n//                                 onClick={() => this.filterSize(20)}\r\n//                               >\r\n//                                 20\r\n//                               </DropdownItem>\r\n//                               <DropdownItem\r\n//                                 tag=\"div\"\r\n//                                 onClick={() => this.filterSize(50)}\r\n//                               >\r\n//                                 50\r\n//                               </DropdownItem>\r\n//                               <DropdownItem\r\n//                                 tag=\"div\"\r\n//                                 onClick={() => this.filterSize(100)}\r\n//                               >\r\n//                                 100\r\n//                               </DropdownItem>\r\n//                               <DropdownItem\r\n//                                 tag=\"div\"\r\n//                                 onClick={() => this.filterSize(134)}\r\n//                               >\r\n//                                 134\r\n//                               </DropdownItem>\r\n//                             </DropdownMenu>\r\n//                           </UncontrolledDropdown>\r\n//                         </div>\r\n//                         <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n//                           <div className=\"table-input mr-1\">\r\n//                             <Input\r\n//                               placeholder=\"search...\"\r\n//                               onChange={(e) =>\r\n//                                 this.updateSearchQuery(e.target.value)\r\n//                               }\r\n//                               value={this.state.value}\r\n//                             />\r\n//                           </div>\r\n//                           <div className=\"export-btn\">\r\n//                             <Button.Ripple\r\n//                               color=\"primary\"\r\n//                               onClick={() => this.gridApi.exportDataAsCsv()}\r\n//                             >\r\n//                               Export as CSV\r\n//                             </Button.Ripple>\r\n//                           </div>\r\n//                         </div>\r\n//                       </div>\r\n//                       <ContextLayout.Consumer>\r\n//                         {(context) => (\r\n//                           <AgGridReact\r\n//                             gridOptions={{}}\r\n//                             rowSelection=\"multiple\"\r\n//                             defaultColDef={defaultColDef}\r\n//                             columnDefs={columnDefs}\r\n//                             rowData={rowData}\r\n//                             onGridReady={this.onGridReady}\r\n//                             colResizeDefault={\"shift\"}\r\n//                             animateRows={true}\r\n//                             floatingFilter={false}\r\n//                             pagination={true}\r\n//                             paginationPageSize={this.state.paginationPageSize}\r\n//                             pivotPanelShow=\"always\"\r\n//                             enableRtl={context.state.direction === \"rtl\"}\r\n//                           />\r\n//                         )}\r\n//                       </ContextLayout.Consumer>\r\n//                     </div>\r\n//                   )}\r\n//                 </CardBody>\r\n//               </Card>\r\n//             </Col>\r\n//           </Row>\r\n//         </div>\r\n//       )\r\n//     );\r\n//   }\r\n// }\r\n// export default UserRideList;\r\nimport React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass UserRideList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.userid?.fullname} </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Gender\",\r\n        field: \"gender\t\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.gender}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Mobile No.\",\r\n      //   field: \"mobile\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.userid?.mobile}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"DOB\",\r\n        field: \"dob\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.userid?.dob}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Time Of Birth\",\r\n        field: \"date_of_time\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params?.data?.p_date_of_time}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Birth City\",\r\n        field: \"birth_city\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.p_birthPlace}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Birth State\",\r\n      //   field: \"birth_state\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.birth_state}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Birth Country\",\r\n      //   field: \"birth_country\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.birth_country}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"Marital Status\",\r\n        field: \"marital_status\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.marital_status}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Occupation\",\r\n        field: \"occupation\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.occupation}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Topic of concern*\",\r\n        field: \"topic_of_cnsrn\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.topic_of_cnsrn}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route render={({ history}) => (\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                onClick={() =>\r\n                history.push(`/app/userride/viewUserRide/${params.data._id}`       )\r\n              }\r\n            />\r\n          )}\r\n        /> */}\r\n              {/* <Route render={({ history}) => (\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                onClick={() => history.push(\"/app/userride/editUserRide\"  )\r\n              }\r\n            />\r\n          )}\r\n        /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n    console.log(astroId);\r\n    await axiosConfig\r\n      // .get(`/admin/get_chat_intake/${astroId}`)\r\n      .get(`/admin/intekListByastro/${astroId}`)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        let rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axios.get(`/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n          <Breadcrumbs\r\n            breadCrumbTitle=\"Request User List\"\r\n            breadCrumbParent=\"Home\"\r\n            breadCrumbActive=\" Request User List \"\r\n          />\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\">\r\n                      Request User List\r\n                    </h1>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-success float-right\"\r\n                          onClick={() => history.push(\"/app/user/addUser\")}\r\n                        >\r\n                          Add User\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col> */}\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default UserRideList;\r\n"],"sourceRoot":""}