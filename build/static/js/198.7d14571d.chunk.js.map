{"version":3,"sources":["views/apps/report/EarningReport.js"],"names":["i","EarningReport","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","firstname","lastname","className","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","id","this","props","match","axios","get","then","response","console","log","error","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/198.7d14571d.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\n//import classnames from \"classnames\";\n// import axiosConfig from \"../../../axiosConfig\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass EarningReport extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n\n      {\n        headerName: \"Name\",\n        field: \"firstname\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>\n                {params.data.firstname} {params.data.lastname}\n              </span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Amout\",\n        field: \"amout\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>\n                {params.data.firstname} {params.data.lastname}\n              </span>\n            </div>\n          );\n        },\n      },\n\n\n      {\n        headerName: \"Date\",\n        field: \"date\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>\n                {params.data.firstname} {params.data.lastname}\n              </span>\n            </div>\n          );\n        },\n      },\n\n\n\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Route\n                render={({ history }) => (\n                  <Eye\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"green\"\n                    onClick={() =>\n                      history.push(\n                        `/app/customer/viewCustomer/${params.data._id}`\n                      )\n                    }\n                  />\n                )}\n              />\n              <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() => history.push(\"/app/customer/editCustomer\")}\n                  />\n                )}\n              />\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    let { id } = this.props.match.params;\n\n    await axios\n      .get(`http://3.108.185.7:4000/user/view_onecust/${id}`)\n      .then((response) => {\n        let rowData = response.data.data;\n        console.log(rowData);\n        this.setState({ rowData });\n      });\n\n    await axios\n      .get(\"http://3.108.185.7:4000/admin/allcustomer\")\n      .then((response) => {\n        let rowData = response.data.data;\n        console.log(rowData);\n        this.setState({ rowData });\n      });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axios.get(`http://3.108.185.7:4000/admin/delcustomer/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <div >\n           <Breadcrumbs\n            breadCrumbTitle=\"Earning Report\"\n            breadCrumbParent=\"Home\"\n            breadCrumbActive=\"Earning Report\"\n          />\n\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                      Earning Report\n                  </h1>\n                </Col>\n                {/* <Col>\n                  <Route\n                    render={({ history }) => (\n                      <Button\n                        className=\" btn btn-danger float-right\"\n                        onClick={() =>\n                          history.push(\"/app/customer/addCustomer\")\n                        }\n                      >\n                        Add Call Details\n                      </Button>\n                    )}\n                  />\n                </Col> */}\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        </div>\n      )\n    );\n  }\n}\nexport default EarningReport;\n"],"sourceRoot":""}