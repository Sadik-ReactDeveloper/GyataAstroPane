{"version":3,"sources":["views/apps/conversation/InTakeList.js"],"names":["i","InTakeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","render","history","color","size","onClick","push","data","_id","firstname","gender","dob","date_of_time","birthPlace","marital_status","occupation","topic_of_cnsrn","entertopic_of_cnsrn","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","astroId","localStorage","getItem","axiosConfig","get","then","response","console","log","id","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/178.5ab37175.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass InTakeList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n      },\n      {\n        headerName: \"Action\",\n        field: \"sortorder\",\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Route\n                render={({ history }) => (\n                  <Button\n                    className=\"mr-50\"\n                    color=\"success\"\n                    size=\"sm\"\n                    onClick={() =>\n                      history.push(\n                        `/app/conversation/birthchart/${params.data?._id}`\n                      )\n                    }\n                  >\n                    BirthChart\n                  </Button>\n                )}\n              />\n              {/* <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() =>\n                      history.push(\n                        `/app/astrology/editAstrologer/${params.data._id}`\n                      )\n                    }\n                  />\n                )}\n              /> */}\n              {/* <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              /> */}\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Name\",\n        field: \"firstname\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.firstname}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Email\",\n      //   field: \"email\t\",\n      //   filter: true,\n      //   width: 120,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.userid?.email}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"Mobile No.\",\n      //   field: \"mobile\",\n      //   filter: true,\n      //   width: 120,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.userid?.mobile}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        headerName: \"Gender\",\n        field: \"gender\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.gender}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"DOB\",\n        field: \"dob\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.dob}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Time\",\n        field: \"date_of_time\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.date_of_time}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Birth Place\",\n        field: \"birthPlace\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.birthPlace}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Marital Status\",\n        field: \"marital_status\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.marital_status}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Occupation\",\n        field: \"occupation\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.occupation}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Topic Of concern \",\n        field: \"topic_of_cnsrn\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.topic_of_cnsrn}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Your Topic Of concern \",\n        field: \"entertopic_of_cnsrn\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.entertopic_of_cnsrn}</span>\n            </div>\n          );\n        },\n      },\n\n      //   {\n      //     headerName: \"Status\",\n      //     field: \"approvedstatus\",\n      //     filter: true,\n      //     width: 100,\n      //     cellRendererFramework: (params) => {\n      //       return params.value === \"true\" ? (\n      //         <div className=\"badge badge-pill badge-success\">\n      //           {params.data.approvedstatus}\n      //         </div>\n      //       ) : params.value === \"false\" ? (\n      //         <div className=\"badge badge-pill badge-warning\">\n      //           {params.data.approvedstatus}\n      //         </div>\n      //       ) : null;\n      //     },\n      //   },\n\n      //   {\n      //     headerName: \"Status\",\n      //     field: \"status\",\n      //     filter: true,\n      //     width: 100,\n      //     cellRendererFramework: (params) => {\n      //       return params.value === \"Online\" ? (\n      //         <div className=\"badge badge-pill badge-success\">\n      //           {params.data.status}\n      //         </div>\n      //       ) : params.value === \"Offline\" ? (\n      //         <div className=\"badge badge-pill badge-warning\">\n      //           {params.data.status}\n      //         </div>\n      //       ) : null;\n      //     },\n      //   },\n    ],\n  };\n  // handlebirthchart = (data) => {\n\n  //   console.log(\"object\", data?.date_of_time.split(\":\"));\n  //   console.log(\"object\", data?.dob.split(\"-\"));\n  // };\n  async componentDidMount() {\n    // let { id } = this.props.match.params;\n\n    let astroId = localStorage.getItem(\"astroId\");\n    await axiosConfig\n      .get(`admin/intekListByastro/${astroId}`)\n      .then((response) => {\n        let rowData = response.data.data;\n        console.log(rowData);\n        this.setState({ rowData });\n      });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/admin/dlt_ChatIntek/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <div>\n        <Breadcrumbs\n          breadCrumbTitle=\"Conversion InTake List\"\n          breadCrumbParent=\"Home\"\n          breadCrumbActive=\" Conversion InTake List \"\n        />\n\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    Conversion InTake List\n                  </h1>\n                </Col>\n                {/* <Col>\n                  <Route\n                    render={({ history }) => (\n                      <Button\n                        className=\" btn btn-success float-right\"\n                        onClick={() =>\n                          history.push(\"/app/astrology/addAstrologer\")\n                        }\n                      >\n                        Add Astrologer\n                      </Button>\n                    )}\n                  />\n                </Col> */}\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default InTakeList;\n"],"sourceRoot":""}