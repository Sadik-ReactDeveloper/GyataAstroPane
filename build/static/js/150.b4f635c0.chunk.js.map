{"version":3,"sources":["views/forms/form-elements/select/SelectReactstrap.js","views/forms/form-elements/select/SelectReact.js","views/forms/form-elements/select/SelectOptions.js","views/forms/form-elements/select/Select.js"],"names":["SelectReactstrap","Card","CardHeader","CardTitle","CardBody","Row","Col","md","sm","className","FormGroup","Input","type","name","id","CustomInput","multiple","disabled","React","Component","colourOptions","value","label","SelectReact","target","href","rel","classNamePrefix","defaultValue","options","isClearable","isLoading","isDisabled","color","isFixed","groupedOptions","animatedComponents","makeAnimated","colourStyles","control","styles","backgroundColor","option","data","isFocused","isSelected","chroma","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","base","state","opacity","paddingRight","display","orderOptions","values","length","filter","v","concat","formatGroupLabel","SelectOptions","handleChange","newValue","handleInputChange","console","group","groupEnd","fixedOnChange","action","removedValue","setState","isMulti","closeMenuOnSelect","components","this","some","onChange","Select","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive"],"mappings":"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","file":"static/js/150.b4f635c0.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Input,\n  CustomInput,\n  Row,\n  Col\n} from \"reactstrap\"\n\nclass SelectReactstrap extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Reactstrap Select</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md=\"6\" sm=\"12\" className=\"my-1\">\n              <FormGroup>\n                <h5 className=\"text-bold-600\">Basic Select</h5>\n                <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n                  <option>Pulp Fiction</option>\n                  <option>Nightcrawler</option>\n                  <option>Donnie Darko</option>\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\" className=\"my-1\">\n              <FormGroup>\n                <h5 className=\"text-bold-600\">Custom Select</h5>\n                <CustomInput\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"exampleSelectCustom\"\n                >\n                  <option>Pulp Fiction</option>\n                  <option>Nightcrawler</option>\n                  <option>Donnie Darko</option>\n                </CustomInput>\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\" className=\"my-1\">\n              <FormGroup>\n                <h5 className=\"text-bold-600\">Multi Select</h5>\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"exampleSelectMulti\"\n                  multiple\n                >\n                  <option>Square</option>\n                  <option>Rectangle</option>\n                  <option>Circle</option>\n                  <option>Triangle</option>\n                  <option>Pentagon</option>\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\" className=\"my-1\">\n              <FormGroup>\n                <h5 className=\"text-bold-600\">Disabled Select</h5>\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"exampleSelectDisabled\"\n                  disabled\n                >\n                  <option>Pulp Fiction</option>\n                  <option>Nightcrawler</option>\n                  <option>Donnie Darko</option>\n                </Input>\n              </FormGroup>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default SelectReactstrap\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\"\nimport Select from \"react-select\"\n\nconst colourOptions = [\n  { value: \"ocean\", label: \"Ocean\" },\n  { value: \"blue\", label: \"Blue\" },\n  { value: \"purple\", label: \"Purple\" },\n  { value: \"red\", label: \"Red\" },\n  { value: \"orange\", label: \"Orange\" }\n]\n\nclass SelectReact extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>React Select</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <p>\n            React Select is a flexible and beautiful Select Input control for ReactJS with \n            multiselect, autocomplete, async and creatable support. You can read it's documentation from {\" \"}\n            <a\n              className=\"my-50\"\n              target=\"_blank\"\n              href=\"https://react-select.com/home\"\n              rel=\"noopener noreferrer\"\n            >\n             here\n            </a>.\n          </p>\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"my-1 text-bold-600\">Basic</h5>\n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                defaultValue={colourOptions[0]}\n                name=\"color\"\n                options={colourOptions}\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"my-1 text-bold-600\">Clearable</h5>\n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                defaultValue={colourOptions[1]}\n                name=\"clear\"\n                options={colourOptions}\n                isClearable={true}\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"my-1 text-bold-600\">Loading</h5>\n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                defaultValue={colourOptions[2]}\n                name=\"loading\"\n                options={colourOptions}\n                isLoading={true}\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"my-1 text-bold-600\">Disabled</h5>\n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                defaultValue={colourOptions[3]}\n                name=\"disabled\"\n                options={colourOptions}\n                isDisabled={true}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default SelectReact\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col } from \"reactstrap\"\nimport Select from \"react-select\"\nimport makeAnimated from \"react-select/animated\"\nimport CreatableSelect from \"react-select/creatable\"\nimport chroma from \"chroma-js\"\n\nconst colourOptions = [\n  { value: \"ocean\", label: \"Ocean\", color: \"#00B8D9\", isFixed: true },\n  { value: \"blue\", label: \"Blue\", color: \"#0052CC\", isFixed: true },\n  { value: \"purple\", label: \"Purple\", color: \"#5243AA\", isFixed: true },\n  { value: \"red\", label: \"Red\", color: \"#FF5630\", isFixed: false },\n  { value: \"orange\", label: \"Orange\", color: \"#FF8B00\", isFixed: false },\n  { value: \"yellow\", label: \"Yellow\", color: \"#FFC400\", isFixed: false }\n]\n\nconst groupedOptions = [\n  {\n    label: \"Ice Creams\",\n    options: [\n      { value: \"vanilla\", label: \"Vanilla\" },\n      { value: \"Dark Chocolate\", label: \"Dark Chocolate\" },\n      { value: \"chocolate\", label: \"Chocolate\" },\n      { value: \"strawberry\", label: \"Strawberry\" },\n      { value: \"salted-caramel\", label: \"Salted Caramel\" }\n    ]\n  },\n  {\n    label: \"Snacks\",\n    options: [\n      { value: \"Pizza\", label: \"Pizza\" },\n      { value: \"Burger\", label: \"Burger\" },\n      { value: \"Pasta\", label: \"Pasta\" },\n      { value: \"Pretzel\", label: \"Pretzel\" },\n      { value: \"Popcorn\", label: \"Popcorn\" }\n    ]\n  }\n]\n\nconst animatedComponents = makeAnimated()\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: \"white\" }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? data.color\n        : isFocused\n        ? color.alpha(0.1).css()\n        : null,\n      color: isDisabled\n        ? \"#ccc\"\n        : isSelected\n        ? chroma.contrast(color, \"white\") > 2\n          ? \"white\"\n          : \"black\"\n        : data.color,\n      cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n      \":active\": {\n        ...styles[\":active\"],\n        backgroundColor:\n          !isDisabled && (isSelected ? data.color : color.alpha(0.3).css())\n      }\n    }\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color)\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.1).css()\n    }\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n    \":hover\": {\n      backgroundColor: data.color,\n      color: \"white\"\n    }\n  })\n}\n\nconst styles = {\n  multiValue: (base, state) => {\n    return state.data.isFixed ? { ...base, opacity: \"0.5\" } : base\n  },\n  multiValueLabel: (base, state) => {\n    return state.data.isFixed\n      ? { ...base, color: \"#626262\", paddingRight: 6 }\n      : base\n  },\n  multiValueRemove: (base, state) => {\n    return state.data.isFixed ? { ...base, display: \"none\" } : base\n  }\n}\n\nconst orderOptions = values => {\n  if (values.length > 0)\n    return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed))\n}\n\nconst formatGroupLabel = data => (\n  <div className=\"d-flex justify-content-between align-center\">\n    <strong>\n      {\" \"}\n      <span>{data.label}</span>\n    </strong>\n    <span>{data.options.length}</span>\n  </div>\n)\n\nclass SelectOptions extends React.Component {\n  state = {\n    value: orderOptions([colourOptions[0], colourOptions[1], colourOptions[3]])\n  }\n\n  handleChange = newValue => {\n    colourOptions.concat(newValue)\n  }\n  handleInputChange = () => {\n    console.group(\"Input Changed\")\n    console.groupEnd()\n  }\n\n  fixedOnChange = (value, { action, removedValue }) => {\n    switch (action) {\n      case \"remove-value\":\n      case \"pop-value\":\n        if (removedValue.isFixed) {\n          return\n        }\n        break\n      case \"clear\":\n        value = colourOptions.filter(v => v.isFixed)\n        break\n      default:\n        return\n    }\n\n    value = orderOptions(value)\n    this.setState({ value: value })\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Options</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"text-bold-600 my-1\">Multi Select</h5>\n              <Select\n                defaultValue={[colourOptions[2], colourOptions[3]]}\n                isMulti\n                name=\"colors\"\n                options={colourOptions}\n                className=\"React\"\n                classNamePrefix=\"select\"\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"text-bold-600 my-1\">Grouped Select</h5>\n              <Select\n                defaultValue={colourOptions[1]}\n                options={groupedOptions}\n                formatGroupLabel={formatGroupLabel}\n                className=\"React\"\n                classNamePrefix=\"select\"\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"text-bold-600 my-1\">Animated Select</h5>\n              <Select\n                closeMenuOnSelect={false}\n                components={animatedComponents}\n                defaultValue={[colourOptions[4], colourOptions[5]]}\n                isMulti\n                options={colourOptions}\n                className=\"React\"\n                classNamePrefix=\"select\"\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"text-bold-600 my-1\">Colored Select</h5>\n              <Select\n                closeMenuOnSelect={false}\n                defaultValue={[colourOptions[0], colourOptions[1]]}\n                isMulti\n                options={colourOptions}\n                styles={colourStyles}\n                className=\"React\"\n                classNamePrefix=\"select\"\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"text-bold-600 my-1\">Creatable Select</h5>\n              <CreatableSelect\n                isClearable={true}\n                options={colourOptions}\n                className=\"React\"\n                classNamePrefix=\"select\"\n              />\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <h5 className=\"text-bold-600 my-1\">Fixed Options Select</h5>\n              <Select\n                value={this.state.value}\n                isMulti\n                styles={styles}\n                isClearable={this.state.value.some(v => !v.isFixed)}\n                name=\"colors\"\n                className=\"React\"\n                classNamePrefix=\"select\"\n                onChange={this.fixedOnChange}\n                options={colourOptions}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default SelectOptions\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport SelectReactstrap from \"./SelectReactstrap\"\nimport ReactSelect from \"./SelectReact\"\nimport Selectoptions from \"./SelectOptions\"\n\nimport \"../../../../assets/scss/plugins/forms/react-select/_react-select.scss\"\n\nclass Select extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Select\"\n          breadCrumbParent=\"Form Elements\"\n          breadCrumbActive=\"Select\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <ReactSelect />\n          </Col>\n          <Col sm=\"12\">\n            <Selectoptions />\n          </Col>\n          <Col sm=\"12\">\n            <SelectReactstrap />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Select\n"],"sourceRoot":""}