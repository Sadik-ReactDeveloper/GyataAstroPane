{"version":3,"sources":["views/apps/chat/ChatLog.js","views/apps/chat/ChatSidebar.js","../node_modules/reactstrap/es/Input.js","redux/actions/chat/index.js"],"names":["i","ChatLog","state","astro","chatsContacts","msg","type","activeUser","activeChat","handleSendMessage","id","isPinned","text","length","props","sendMessage","setState","handleTime","time_to","time_from","date_time_to","Date","parse","date_time_from","getFullYear","getMonth","getDate","scrollToBottom","chatContainer","ReactDOM","findDOMNode","chatArea","scrollTop","scrollHeight","submitHandler","e","astroid","userId","preventDefault","astroId","JSON","localStorage","getItem","obj","userid","axiosConfig","post","then","response","console","log","data","status","get","roomId","response1","roomChatData","catch","error","handleChange","target","value","this","activeUser_id","_id","chat","chats","renderChats","undefined","map","Fragment","key","time","className","toLocaleString","month","renderSentTime","isSent","src","userimg","alt","height","width","userImg","photoURL","renderAvatar","textContent","size","onClick","mql","matches","mainSidebar","handleReceiverSidebar","displayName","togglePinned","stroke","options","wheelPropagation","ref","el","onSubmit","placeholder","onChange","color","React","Component","connect","chatApp","ChatSidebar","chatsArr","getChatContents","getChats","getContactChats","getChatRoomId","roomid","handleOnChange","searchContacts","img","fullname","filteredChats","handleActiveChat","markSeenAllMessages","activeChatID","displayname","_excluded","propTypes","children","PropTypes","node","string","oneOfType","number","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","dispatch","axios","contacts","err","contactId","newMsg","isSeen","toString","message","changeStatus","query"],"mappings":"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","file":"static/js/25.899ef675.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Input, Button } from \"reactstrap\"\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\nimport axiosConfig from \"../../../axiosConfig\"\n\nclass ChatLog extends React.Component {\n  // static getDerivedStateFromProps(props, state) {\n  //   if (\n  //     props.activeUser !== state.activeChat ||\n  //     props.activeChat !== state.activeChat\n  //   ) {\n  //     return {\n  //       activeUser: props.activeUser,\n  //       activeChat: props.activeChat\n  //     }\n  //   }\n  //   // Return null if the state hasn't changed\n  //   return null\n  // }\n  state = {\n    astro: [],\n    chatsContacts: [],\n    msg: \"\",\n    type: \"\",\n    activeUser: null,\n    activeChat: null\n  }\n\n  handleSendMessage = (id, isPinned, text) => {\n    if (text.length > 0) {\n      this.props.sendMessage(id, isPinned, text)\n      this.setState({\n        msg: \"\"\n      })\n    }\n  }\n\n  componentDidMount() {\n    //\n    // let { id } = this.props.match.params;\n\n    // let astroid = JSON.parse(l;ocalStorage.getItem(\"astroId\"));\n    let astroId = localStorage.getItem(\"astroId\");\n    // console.log(astroId);\n    axiosConfig\n      .get(`/user/allchatwithAstro/${astroId}`)\n      // .get(`/user/astrogetRoomid/${id}`)\n      .then((response) => {\n        console.log(\"chatsContacts\", response.data.data);\n        this.setState({\n          chatsContacts: response.data.data,\n          // msg: response.data.data.msg,\n          // type: response.data.data.type,\n\n        });\n\n        // if (response.data.status === true) {\n        //   this.getChatContents()\n        // }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n\n  }\n  // componentDidMount() {\n  //   this.scrollToBottom()\n  // }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  handleTime = (time_to, time_from) => {\n    const date_time_to = new Date(Date.parse(time_to))\n    const date_time_from = new Date(Date.parse(time_from))\n    return (\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\n      date_time_to.getMonth() === date_time_from.getMonth() &&\n      date_time_to.getDate() === date_time_from.getDate()\n    )\n  }\n\n  scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\n    chatContainer.scrollTop = chatContainer.scrollHeight\n  }\n  submitHandler = async (e, astroid, userId) => {\n    e.preventDefault();\n    // let { id } = this.props.match.params;\n    let astroId = JSON.parse(localStorage.getItem(\"astroId\"));\n    let obj = {\n      userid: this.state.userId,\n      msg: this.state.msg,\n    };\n\n    await axiosConfig\n      .post(`/user/add_chatroom/${astroId}`, obj)\n      .then((response) => {\n        console.log(\"hdfkjh\", response.data.status)\n        if (response.data.status === true) {\n          this.setState({ msg: \"\" });\n          axiosConfig.get(`/user/allchatwithAstro/${this.state.roomId}`)\n            .then((response1) => {\n              console.log(response1?.data?.data);\n              if (response1.data.status === true) {\n                this.setState({ roomChatData: response1?.data.data });\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }\n      })\n\n      .catch((error) => {\n        // swal(\"Error!\", \"You clicked the button!\", \"error\");\n        console.log(error);\n      });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      msg: e.target.value,\n    });\n  };\n  render() {\n    console.log(this.state.activeUser)\n\n    const { chatsContacts, activeUser } = this.state\n    let activeUser_id = activeUser && activeUser._id ? activeUser._id : null,\n      activeChat =\n        activeUser && activeUser._id\n          ? this.props.chat.chats[activeUser_id]\n          : null\n\n    let renderChats =\n      activeChat && activeChat !== undefined && activeChat.msg\n        ? activeChat.msg.map((chat, i) => {\n          let renderSentTime = () => {\n            if (\n              i > 0 &&\n              !this.handleTime(chat.time, activeChat.msg[i - 1].time)\n            ) {\n              return (\n                <div className=\"divider\">\n                  <div className=\"divider-text\">\n                    {new Date().getDate() +\n                      \" \" +\n                      new Date().toLocaleString(\"default\", {\n                        month: \"short\"\n                      })}\n                  </div>\n                </div>\n              )\n            }\n          }\n          let renderAvatar = () => {\n            if (i > 0) {\n              if (\n                chat.isSent === true &&\n                activeChat.msg[i - 1].isSent !== true\n              ) {\n                return (\n                  <div className=\"chat-avatar\">\n                    <div className=\"avatar m-0\">\n                      <img\n                        src={chat.astroid?.userimg[0]}\n                        alt=\"chat avatar\"\n                        height=\"40\"\n                        width=\"40\"\n                      />\n                    </div>\n                  </div>\n                )\n              } else if (chat.isSent !== true) {\n                return (\n                  <div className=\"chat-avatar\">\n                    <div className=\"avatar m-0\">\n                      <img\n                        src={chat.userid?.userimg[0]}\n                        alt=\"chat avatar\"\n                        height=\"40\"\n                        width=\"40\"\n                      />\n                    </div>\n                  </div>\n                )\n              } else {\n                return \"\"\n              }\n            } else {\n              return (\n                <div className=\"chat-avatar\">\n                  <div className=\"avatar m-0\">\n                    <img\n                      src={chat.isSent ? userImg : activeUser.photoURL}\n                      alt=\"chat avatar\"\n                      height=\"40\"\n                      width=\"40\"\n                    />\n                  </div>\n                </div>\n              )\n            }\n          }\n          return (\n            <React.Fragment key={i}>\n              {renderSentTime()}\n              <div\n                className={`chat ${chat.isSent !== true ? \"chat-left\" : \"chat-right\"\n                  }`}>\n                {renderAvatar()}\n                <div className=\"chat-body\">\n                  <div className=\"chat-content\">{chat.textContent}</div>\n                </div>\n              </div>\n            </React.Fragment>\n          )\n        })\n        : null\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"chat-app-window\">\n          <div\n            className={`start-chat-area ${activeUser !== null ? \"d-none\" : \"d-flex\"\n              }`}>\n            <span className=\"mb-1 start-chat-icon\">\n              <MessageSquare size={50} />\n            </span>\n            <h4\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\n              onClick={() => {\n                if (this.props.mql.matches === false) {\n                  this.props.mainSidebar(true)\n                } else {\n                  return null\n                }\n              }}>\n              Start Conversation\n            </h4>\n          </div>\n          <div\n            className={`active-chat ${activeUser === null ? \"d-none\" : \"d-block\"\n              }`}>\n            <div className=\"chat_navbar\">\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\n                <div className=\"d-flex align-items-center\">\n                  <div\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\n                    onClick={() => this.props.mainSidebar(true)}>\n                    <Menu size={24} />\n                  </div>\n                  <div\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\n                    <img\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\n                      height=\"40\"\n                      width=\"40\"\n                    />\n                    <span\n                      className={`\n                    ${activeUser !== null &&\n                          activeUser.status === \"do not disturb\"\n                          ? \"avatar-status-busy\"\n                          : activeUser !== null && activeUser.status === \"away\"\n                            ? \"avatar-status-away\"\n                            : activeUser !== null && activeUser.status === \"offline\"\n                              ? \"avatar-status-offline\"\n                              : \"avatar-status-online\"\n                        }\n                    `}\n                    />\n                  </div>\n                  <h6 className=\"mb-0\">\n                    {activeUser !== null ? activeUser.displayName : \"\"}\n                  </h6>\n                </div>\n                <span\n                  className=\"favorite\"\n                  onClick={() => {\n                    if (activeChat) {\n                      this.props.togglePinned(\n                        activeUser._id,\n                        !activeChat.isPinned\n                      )\n                    }\n                  }}>\n                  <Star\n                    size={22}\n                    stroke={\n                      activeChat && activeChat.isPinned === true\n                        ? \"#FF9F43\"\n                        : \"#626262\"\n                    }\n                  />\n                </span>\n              </header>\n            </div>\n            <PerfectScrollbar\n              className=\"user-chats\"\n              options={{\n                wheelPropagation: false\n              }}\n              ref={el => {\n                this.chatArea = el\n              }}>\n              <div className=\"chats\">{renderChats}</div>\n            </PerfectScrollbar>\n            <div className=\"chat-app-form\">\n\n              <form\n                className=\"chat-app-input d-flex align-items-center\"\n                onSubmit={e => {\n                  e.preventDefault()\n                  this.handleSendMessage(\n                    activeUser._id,\n                    false,\n                    this.state.data?.msg,\n                    activeUser\n                  )\n                }}>\n                <Input\n                  // roomChatData={this.state.roomChatData.length > 0 ? this.state.roomChatData : []}\n                  type=\"text\"\n                  className=\"message mr-1 ml-50\"\n                  placeholder=\"Type your message\"\n                  value={this.state.msg}\n                  onChange={e => {\n                    e.preventDefault()\n                    this.setState({\n                      msg: e.target.value\n                    })\n                  }}\n                />\n                <Button color=\"primary\"\n                // onClick={(e) =>\n                //   this.submitHandler(\n                //     e,\n                //     this.state.astroId,\n                //     this.state.userId,\n\n                //   )\n                // }\n\n                >\n                  <Send className=\"d-lg-none\" size={15} />\n                  <span className=\"d-lg-block d-none\">Send</span>\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\n","import React from 'react'\nimport { Card, FormGroup, Input, Badge } from 'reactstrap'\nimport { X, Search } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { connect } from 'react-redux'\nimport {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages,\n} from '../../../redux/actions/chat/index'\nimport userImg from '../../../assets/img/portrait/small/avatar-s-11.jpg'\nimport axiosConfig from \"../../../axiosConfig\"\nimport ChatLog from \"./ChatLog\";\nclass ChatSidebar extends React.Component {\n  // static getDerivedStateFromProps(props, state) {\n  //   if (\n  //     props.chat.chatContacts.length !== state.chatContacts ||\n  //     props.chat.chats.length !== state.chats ||\n  //     props.chat.status !== state.status\n  //   ) {\n  //     return {\n  //       chatsContacts: props.chat.chatContacts,\n  //       chats: props.chat.chats,\n  //       status: props.chat.status,\n  //     }\n  //   }\n  //   // Return null if the state hasn't changed\n  //   return null\n  // }\n\n  state = {\n    roomChatData: [],\n    chatsContacts: [],\n    chatsArr: [],\n    status: null,\n    value: '',\n    astro: [],\n  }\n\n  getChatContents = () => {\n    this.props.getChats()\n    this.props.getContactChats()\n  }\n  getChatRoomId = async (astro) => {\n    this.setState({ userId: astro?.astroid?._id, roomId: astro?.roomid });\n    await axiosConfig.get(`/user/allchatwithAstro/${astro?.roomid}`)\n      .then((response) => {\n        console.log(\"sdhfkhk\", response?.data?.data);\n        if (response.data.status === true) {\n          this.setState({ roomChatData: response?.data.data });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  componentDidMount() {\n\n    // let { id } = this.props.match.params;\n\n    // let astroid = JSON.parse(l;ocalStorage.getItem(\"astroId\"));\n    let astroId = localStorage.getItem(\"astroId\");\n    // console.log(astroId);\n    axiosConfig\n      .get(`/user/astrogetRoomid/${astroId}`)\n      // .get(`/user/astrogetRoomid/${id}`)\n      .then((response) => {\n        console.log(\"chatsContacts\", response.data.data);\n        this.setState({ chatsArr: response.data.data });\n        if (response.data.status === true) {\n          this.getChatContents()\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n    axiosConfig.get(`/admin/getoneAstro/${astroId}`)\n      // .get(`/user/astrogetRoomid/${id}`)\n      .then((response) => {\n        console.log(\"astro\", response.data.data);\n        this.setState({\n          img: response.data.data.img[0],\n          fullname: response.data.data.fullname,\n          astro: response.data.data,\n          // msg: response.data.data.msg,\n          // type: response.data.data.type,\n\n        });\n\n        // if (response.data.status === true) {\n        //   this.getChatContents()\n        // }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n  // chatsContacts: this.props.chat.chatContacts,\n  // chats: this.props.chat.chats,\n  // status: this.props.chat.status,\n  // chatsContacts: response.data?.data.chatsContacts,\n  // roomid: response.data.data?.roomid,\n  // msg: response.data.data?.msg,\n  // type: response.data.data?.type,\n  // async componentDidMount() {\n\n  //   await\n  //     this.getChatContents()\n  //   this.setState({\n  //     chatsContacts: this.props.chat.chatContacts,\n\n  //     chats: this.props.chat.chats,\n  //     status: this.props.chat.status,\n  //   })\n\n  // }\n\n\n  handleOnChange = (e) => {\n    this.setState({ value: e.target.value })\n    this.props.searchContacts(e.target.value)\n  }\n\n  render() {\n    console.log(this.state.chatsArr)\n    const { chatsContacts, ChatLog, status, value } = this.state\n\n    const chatsArr = value.length\n      ? this.props.chat.filteredChats\n      : chatsContacts\n\n    let renderChats =\n      this.state.chatsArr.map((chat) => {\n        return (\n          <li\n            key={chat._id}\n            onClick={() => {\n              // this.props.handleActiveChat(chat._id)\n              // this.props.mainSidebar(false)\n              // this.props.markSeenAllMessages(chat._id)\n\n              this.props.handleActiveChat(chat._id, ChatLog._id)\n              this.props.mainSidebar(false)\n              this.props.markSeenAllMessages(chat._id, ChatLog._id)\n            }}\n            className={`${this.props.activeChatID === chat._id ? 'active' : ''\n              }`}\n          >\n            <div className=\"pr-1\">\n              <span className=\"avatar avatar-md m-0\">\n                <img\n                  src={chat.userid?.userimg[0]}\n                  alt={chat.displayname}\n                  height=\"38\"\n                  width=\"38\"\n                />\n              </span>\n            </div>\n            <div className=\"user-chat-info\">\n              <div className=\"contact-info\">\n                {/* <ChatLog getChatRoomId={(id) => this.getChatRoomId(id)} /> */}\n                <h5 className=\"text-bold-600 mb-0\">{chat.userid?.fullname}</h5>\n                <p className=\"truncate\">\n                  {chat.msg}\n                </p>\n              </div>\n              {/* <div className=\"contact-meta d-flex- flex-column\">\n                  <span className=\"float-right mb-25\">\n                    {lastMsgMonth + ' ' + lastMsgDay}\n                  </span>\n                  {pendingMsg > 0 ? (\n                    <div className=\"unseen-msg\">\n                      <Badge\n                        className=\"badge-md float-right\"\n                        color=\"primary\"\n                        pill\n                      >\n                        {pendingMsg}\n                      </Badge>\n                    </div>\n                  ) : null}\n                </div> */}\n            </div>\n          </li>\n        )\n      })\n\n    return (\n      <Card className=\"sidebar-content h-100\">\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"chat-fixed-search\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\n              <div\n                className=\"avatar\"\n              // onClick={() => this.props.handleUserSidebar('open')}\n              >\n                <img src={this.state?.img} alt=\"User Profile\" height=\"40\" width=\"40\" />\n                {/* <span\n                  className={\n                    status === 'dnd'\n                      ? 'avatar-status-busy'\n                      : status === 'away'\n                        ? 'avatar-status-away'\n                        : status === 'offline'\n                          ? 'avatar-status-offline'\n                          : 'avatar-status-online'\n                  }\n                /> */}\n\n              </div>\n\n            </div>\n            <span> <h5 className=\"text-bold-600 mb-0\">{this.state?.fullname}</h5></span>\n            {/* <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\n              <Input\n                className=\"round\"\n                type=\"text\"\n                placeholder=\"Search contact or start a new chat\"\n                onChange={(e) => this.handleOnChange(e)}\n                value={value}\n              />\n              <div className=\"form-control-position\">\n                <Search size={15} />\n              </div>\n            </FormGroup> */}\n          </div>\n        </div>\n        <PerfectScrollbar\n          className=\"chat-user-list list-group\"\n          options={{\n            wheelPropagation: false,\n          }}\n        >\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\n\n        </PerfectScrollbar>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    chat: state.chatApp.chats,\n  }\n}\nexport default connect(mapStateToProps, {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages,\n})(ChatSidebar)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import axios from \"axios\"\n\nexport const getChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chats\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CONTACTS\",\n          contacts: response.data.contacts,\n          chats: response.data.chats\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const getContactChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chat-contacts\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CHAT_CONTACTS\",\n          chats: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const togglePinned = (id, value) => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/set-pinned/\", {\n        contactId: id,\n        value\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_PINNED\",\n          id,\n          value\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const sendMessage = (id, isPinned, text) => {\n  if (text.length > 0) {\n    return dispatch => {\n      let newMsg = {\n        textContent: text,\n        isSent: true,\n        isSeen: false,\n        time: new Date().toString()\n      }\n      axios\n        .post(\"/api/app/chat/send-message\", {\n          contactId: id,\n          message: newMsg,\n          isPinned\n        })\n        .then(response => {\n          dispatch({\n            type: \"SEND_MESSAGE\",\n            msg: newMsg,\n            id,\n            isPinned,\n            text\n          })\n          dispatch(getChats())\n        })\n        .catch(err => console.log(err))\n    }\n  } else {\n    return\n  }\n}\n\nexport const changeStatus = status => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_STATUS\",\n      status\n    })\n  }\n}\n\nexport const searchContacts = query => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_CONTACTS\",\n      query\n    })\n  }\n}\n\nexport const markSeenAllMessages = id => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/mark-all-seen/\", {\n        contactId: id\n      })\n      .then(response => {\n        dispatch({\n          type: \"MARK_AS_SEEN\",\n          id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n"],"sourceRoot":""}