{"version":3,"sources":["views/apps/report/CallReport.js"],"names":["CallReport","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","Status","userdeductedAmt","Duration","userid","fullname","createdAt","split","CallHistoryList","setInterval","astroid","localStorage","getItem","axiosConfig","get","then","response","setState","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","sm","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/205.4658c408.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\n\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass CallReport extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"Status\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.Status}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Duration\",\r\n        field: \"duration\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              {params?.data?.userdeductedAmt === 0 ? (\r\n                <>\r\n                  <span>Not Answered</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span>{params.data?.Duration} Min</span>\r\n                </>\r\n              )}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"UserName\",\r\n        field: \"duration\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <>\r\n                <span>{params.data?.userid?.fullname}</span>\r\n              </>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"date\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.createdAt.split(\"T\")[0]}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Deducted Amount\",\r\n        field: \"Deducted Amount\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.userdeductedAmt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Actions\",\r\n      //   field: \"sortorder\",\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Eye\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"green\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/customer/viewCustomer/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() => history.push(\"/app/customer/editCustomer\")}\r\n      //             />\r\n      //           )}\r\n      //         />\r\n      //         <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             let selectedData = this.gridApi.getSelectedRows();\r\n      //             this.runthisfunction(params.data._id);\r\n      //             this.gridApi.updateRowData({ remove: selectedData });\r\n      //           }}\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    let astroid = localStorage.getItem(\"astroId\");\r\n    axiosConfig.get(`/user/astroCallHistory/${astroid}`).then((response) => {\r\n      let rowData = response.data.data;\r\n      this.setState({ rowData });\r\n    });\r\n    this.CallHistoryList();\r\n  }\r\n  CallHistoryList = () => {\r\n    setInterval(() => {\r\n      let astroid = localStorage.getItem(\"astroId\");\r\n      axiosConfig.get(`/user/astroCallHistory/${astroid}`).then((response) => {\r\n        let rowData = response.data.data;\r\n        this.setState({ rowData });\r\n      });\r\n    }, 10000);\r\n  };\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      // console.log(rowData),\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Call Report\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"Call Report\"\r\n        />\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Call Reports\r\n                  </h1>\r\n                </Col>\r\n                {/* <Col>\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\" btn btn-danger float-right\"\r\n                        onClick={() =>\r\n                          history.push(\"/app/customer/addCustomer\")\r\n                        }\r\n                      >\r\n                        Add Call Details\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col> */}\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CallReport;\r\n"],"sourceRoot":""}