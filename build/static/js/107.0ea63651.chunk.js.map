{"version":3,"sources":["views/apps/termscondition/EditTermCondition.js","../node_modules/reactstrap/es/Form.js"],"names":["AddTermsCondition","props","onEditorStateChange","editorState","setState","desc","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","console","log","history","push","catch","error","EditorState","createEmpty","this","get","data","className","col-sm-6","onClick","onSubmit","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component","_excluded","propTypes","children","PropTypes","node","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","_this","call","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/107.0ea63651.chunk.js","sourcesContent":["\n// import React, { Component } from \"react\";\n// import {\n//   Card,\n//   CardBody,\n//   Row,\n//   Col,\n//   Form,\n//   Label,\n//   Input,\n//   Button,\n//   Breadcrumb,\n//   BreadcrumbItem,\n// } from \"reactstrap\";\n// import axiosConfig from \"../../../axiosConfig\";\n// // import { history } from \"../../../history\";\n// // import { data } from \"jquery\";\n// // import swal from \"sweetalert\";\n// import { Route } from \"react-router-dom\";\n\n// export default class EditTermCondition extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       dealer: \"\",\n//       desc: \"\",\n     \n//     };\n//   }\n//   componentDidMount() {\n//     let { id } = this.props.match.params;\n//     axiosConfig\n//       .get(`/admin/viewonecondition/${id}`)\n//       .then((response) => {\n//         console.log(response);\n//         this.setState({\n//             desc: response.data.data.desc,\n         \n//         //   dealer: response.data.data.dealer,\n//         });\n//       })\n//       .catch((error) => {\n//         console.log(error.response);\n//       });\n//   }\n\n//   changeHandler = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n//   submitHandler = (e) => {\n//     e.preventDefault();\n//     let { id } = this.props.match.params;\n//     axiosConfig\n//       .post(`/admin/edit_termscondition/${id}`, this.state)\n//       .then((response) => {\n//         console.log(response);\n//         // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\n//         this.props.history.push(`/app/termscondition/TermConditionList`);\n        \n//       })\n//       .catch((error) => {\n//         console.log(error.response);\n//       });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <Row>\n//           <Col sm=\"12\">\n//             <div>\n//               <Breadcrumb listTag=\"div\">\n//                 <BreadcrumbItem href=\"/\" tag=\"a\">\n//                   Home\n//                 </BreadcrumbItem>\n//                 {/* <BreadcrumbItem href=\"/app/material/materialList\" tag=\"a\">\n//                     Material List\n//                 </BreadcrumbItem> */}\n//                 <BreadcrumbItem active>Edit Term & Condition</BreadcrumbItem>\n//               </Breadcrumb>\n//             </div>\n//           </Col>\n//         </Row>\n//         <Card>\n//           <Row className=\"m-2\">\n//             <Col>\n//               <h1 col-sm-6 className=\"float-left\">\n//                 Edit Term & Condition\n//               </h1>\n//             </Col>\n//             <Col>\n//               <Route\n//                 render={({ history }) => (\n//                   <Button\n//                     className=\" btn btn-danger float-right\"\n//                     onClick={() =>\n//                       history.push(\"/app/termscondition/TermConditionList\")\n//                     }\n//                   >\n//                     Back\n//                   </Button>\n//                 )}\n//               />\n//             </Col>\n//           </Row>\n//           <CardBody>\n//             <Form className=\"m-1\" onSubmit={this.submitHandler}>\n//               <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\n//                 <Label>Descriptions</Label>\n//                 <Input\n//                   type=\"textarea\"\n//                   name=\"desc\"\n//                   value={this.state.desc}\n//                   onChange={this.changeHandler}\n//                 ></Input>\n//               </Col>\n          \n//               <Row>\n//                 <Col\n//                   lg=\"6\"\n//                   md=\"6\"\n//                   sm=\"6\"\n//                   className=\"mb-2\"\n//                   style={{ marginLeft: \"15px\" }}\n//                 >\n//                   <Button.Ripple\n//                     color=\"primary\"\n//                     type=\"submit\"\n//                     className=\"mr-1 mb-1\"\n//                   >\n//                     Update\n//                   </Button.Ripple>\n//                 </Col>\n//               </Row>\n//             </Form>\n//           </CardBody>\n//         </Card>\n//       </div>\n//     );\n//   }\n// }\n\n\n\nimport React from \"react\";\nimport { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { history } from \"../../../history\";\nimport swal from 'sweetalert';\n\nclass AddTermsCondition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      desc: \" \",\n      editorState: EditorState.createEmpty(),\n    };\n  }\n\n  onEditorStateChange = (editorState) => {\n    this.setState({\n      editorState,\n      desc: (convertToRaw(editorState.getCurrentContent())),\n    });\n  };\n\n   componentDidMount() {\n    let { id } = this.props.match.params;\n    axiosConfig\n      .get(`/admin/viewonecondition/${id}`)\n      .then((response) => {\n        console.log(response.data.data.desc);\n        this.setState({\n            desc: response.data.data.desc,\n         \n        //   dealer: response.data.data.dealer,\n        });\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  }\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  submitHandler = (e) => {\n    e.preventDefault();\n    let { id } = this.props.match.params;\n    axiosConfig\n      .post(`/admin/edit_termscondition/${id}`, this.state)\n      .then((response) => {\n        console.log(response);\n        // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\n        this.props.history.push(`/app/termscondition/TermConditionList`);\n        \n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  };\n\n  render() {\n    return (\n      <Card>\n        <Row className=\"m-2\">\n        <Col>\n            <h1 col-sm-6 className=\"float-left\">\n              Edit Term And Condition \n            </h1>\n          </Col>\n          <Col>\n            <Button\n              className=\" btn btn-danger float-right\"\n              onClick={() =>history.push(\"/app/termscondition/TermConditionList\")\n              }\n            >\n              Back\n            </Button>\n          </Col>\n        </Row>\n        <CardBody>\n          <Form onSubmit={this.submitHandler}>\n\n          {/* <Editor\n  editorState={this.state.editorState}\n  toolbarClassName=\"toolbarClassName\"\n  wrapperClassName=\"wrapperClassName\"\n  editorClassName=\"editorClassName\"\n  onEditorStateChange={this.onEditorStateChange}\n/>; */}\n\n            <Editor\n              toolbarClassName=\"demo-toolbar-absolute\"\n              wrapperClassName=\"demo-wrapper\"\n              editorClassName=\"demo-editor\"\n              // value={this.state.desc}\n              editorState={this.state.editorState}\n\n              onEditorStateChange={this.onEditorStateChange}\n              toolbar={{\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\n                inline: {\n                  options: [\n                    \"bold\",\n                    \"italic\",\n                    \"underline\",\n                    \"strikethrough\",\n                    \"monospace\",\n                  ],\n                  bold: { className: \"bordered-option-classname\" },\n                  italic: { className: \"bordered-option-classname\" },\n                  underline: { className: \"bordered-option-classname\" },\n                  strikethrough: { className: \"bordered-option-classname\" },\n                  code: { className: \"bordered-option-classname\" },\n                },\n                blockType: {\n                  className: \"bordered-option-classname\",\n                },\n                fontSize: {\n                  className: \"bordered-option-classname\",\n                },\n                fontFamily: {\n                  className: \"bordered-option-classname\",\n                },\n              }}\n            />\n            <br/>\n            <Button color=\"primary\"> Submit</Button>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default AddTermsCondition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;"],"sourceRoot":""}