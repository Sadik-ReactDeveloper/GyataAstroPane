{"version":3,"sources":["views/apps/conversation/yog.js","views/apps/conversation/newCode.js","views/apps/conversation/YoginiDasha.js","../node_modules/reactstrap/es/Table.js"],"names":["React","Component","style","table","width","display","borderSpacing","borderCollapse","YoginiDasha","props","handleChange","e","setState","selected","target","value","ashtakChange","dropdownList","handleSubmitList","console","log","state","axiosConfig","post","yoginiDasha","then","response","Ashtakvarga","data","ashtalData","ashtak_points","aquarius","catch","error","swal","horoChart","astroId","localStorage","getItem","get","Fragment","Card","className","Row","Col","lg","md","sm","col-sm-6","name","onChange","Button","size","onClick","this","render","history","push","CardBody","maxHeight","overflowY","Table","responsive","scope","ascendant","jupiter","mars","mercury","moon","saturn","sun","total","venus","ashtak_varga","sign_id","type","planet","sign","Dosha","list","id","label","rowData","ashtakvarga","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","filter","cellRendererFramework","params","sign_name","planet_small","planet_degree","handleSubmit","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","map","option","key","UncontrolledDropdown","DropdownToggle","tag","length","DropdownMenu","right","DropdownItem","Input","placeholder","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","_excluded","propTypes","PropTypes","string","cssModule","object","bordered","bool","borderless","striped","dark","hover","oneOfType","tagPropType","responsiveTag","innerRef","func","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","ref","responsiveClassName","defaultProps"],"mappings":"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","file":"static/js/129.58a24099.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport \"../../../assets/scss/pages/app-ecommerce-shop.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass Ashtakvarga extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    rowList: {},\r\n    data: {},\r\n    // yoginiDasha: [],\r\n    selected: \"\",\r\n    // horoChart: [],\r\n    Ashtakvarga: [],\r\n    ashtalData: [],\r\n    dropdownList: \"\",\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      // {\r\n      //   headerName: \"Action\",\r\n      //   field: \"sortorder\",\r\n      //   width: 300,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Button\r\n      //               className=\"mr-50\"\r\n      //               color=\"success\"\r\n      //               size=\"sm\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/conversation/yoginiDasha/${params.data?._id}`\r\n      //                 )\r\n      //               }\r\n      //             >\r\n      //               Ashtakvarga\r\n      //             </Button>\r\n      //           )}\r\n      //         />\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Eye\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"green\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/conversation/horoScopeChart/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Button\r\n      //               className=\"mr-50\"\r\n      //               color=\"success\"\r\n      //               size=\"sm\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/conversation/birthchart/${params.data?._id}`\r\n      //                 )\r\n      //               }\r\n      //             >\r\n      //               BirthChart\r\n      //             </Button>\r\n      //           )}\r\n      //         />\r\n      //         {/* <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/astrology/editAstrologer/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         /> */}\r\n      //         {/* <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             let selectedData = this.gridApi.getSelectedRows();\r\n      //             this.runthisfunction(params.data._id);\r\n      //             this.gridApi.updateRowData({ remove: selectedData });\r\n      //           }}\r\n      //         /> */}\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"Ascendant\",\r\n        field: \"ascendant\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.ascendant}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Jupiter\",\r\n        field: \"jupiter\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.jupiter}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Mars\",\r\n        field: \"mars\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.mars}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"mercury\",\r\n        field: \"mercury\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.mercury}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      //   {\r\n      //     headerName: \"Moon\",\r\n      //     field: \"moon\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.moon}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"saturn\",\r\n      //     field: \"saturn\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.saturn}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"sun\",\r\n      //     field: \"sun\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.sun}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"total\",\r\n      //     field: \"total\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.planet_degree}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n\r\n      //   {\r\n      //     headerName: \"venus\",\r\n      //     field: \"venus\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.planet_degree}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Sign Id\",\r\n      //     field: \"signId\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.planet_degree}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Sign Name\",\r\n      //     field: \"signName\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.signName}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Type\",\r\n      //     field: \"Type\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.planet_degree}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Planet\",\r\n      //     field: \"Planet\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div>\r\n      //           <span>{params.data.planet_degree}</span>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n    ],\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ selected: e.target.value });\r\n  };\r\n  ashtakChange = (e) => {\r\n    this.setState({ dropdownList: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n    axiosConfig\r\n      .get(`/user/birth_detailsByAstroid/${astroId}`)\r\n      .then((response) => {\r\n        // console.log(\"formDetails>>\", response.data.data);\r\n        this.setState({ Ashtakvarga: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleSubmitList = () => {\r\n    console.log(this.state.dropdownList);\r\n    axiosConfig\r\n      .post(\r\n        `/user/Ashtakvarga/${this.state.dropdownList}`,\r\n        this.state.Ashtakvarga[0]\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        // this.setState({ Ashtakvarga: response.data.data });\r\n        this.setState({\r\n          rowList: response.data.data.ashtak_points.aquarius,\r\n        });\r\n        console.log(\"CVCVCV\", response.data.data.ashtak_points.aquarius);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error BirthDetails\", error);\r\n        swal(\"Error!\", \"You clicked the button!\", \"error\");\r\n      });\r\n  };\r\n  // async componentDidMount() {\r\n  //   let astroId = localStorage.getItem(\"astroId\");\r\n  //   await axiosConfig\r\n  //     .get(`/admin/intekListByastro/${astroId}`)\r\n  //     .then((response) => {\r\n  //       let rowData = response.data.data;\r\n  //       this.setState({ rowData });\r\n  //     });\r\n  // }\r\n\r\n  // async runthisfunction(id) {\r\n  //   console.log(id);\r\n  //   await axiosConfig.get(`/admin/dlt_ChatIntek/${id}`).then(\r\n  //     (response) => {\r\n  //       console.log(response);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <div>\r\n        {/* <Breadcrumbs\r\n          breadCrumbTitle=\"  Ashtak List\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"   Ashtak List\"\r\n        /> */}\r\n\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Ashtak List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <select\r\n                    name=\"dropdownList\"\r\n                    className=\"mt-2\"\r\n                    onChange={(e) => this.ashtakChange(e)}\r\n                  >\r\n                    <option> Select Ashtakvarga</option>\r\n                    <option value=\"sun\">sun</option>\r\n                    <option value=\"moon\">moon</option>\r\n                    <option value=\"mars\">mars</option>\r\n                    <option value=\"mercury\">mercury</option>\r\n                    <option value=\"jupiter\">jupiter</option>\r\n                    <option value=\"venus\">venus</option>\r\n                    <option value=\"saturn\">saturn</option>\r\n                    <option value=\"ascendant\">ascendant</option>\r\n                  </select>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    onClick={(e) => this.handleSubmitList(e)}\r\n                    className=\"ml-1  btn btn-success \"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Ashtakvarga;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { history } from \"../../../history\";\r\n\r\nimport \"../../../assets/scss/pages/app-ecommerce-shop.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nconst style = {\r\n  table: {\r\n    width: \"100%\",\r\n    display: \"table\",\r\n    borderSpacing: 0,\r\n    borderCollapse: \"separate\",\r\n  },\r\n};\r\nclass YoginiDasha extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      yoginiDasha: [],\r\n      selected: \"\",\r\n      horoChart: [],\r\n      Ashtakvarga: [],\r\n      ashtalData: [],\r\n      dropdownList: \"\",\r\n    };\r\n  }\r\n\r\n  //   list = [\r\n  //     {\r\n  //       label: \"Chalit Chart\",\r\n  //       value: \"chalit\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Sun Chart\",\r\n  //       value: \"SUN\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Moon Chart\",\r\n  //       value: \"MOON\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Brith Chart\",\r\n  //       value: \"D1\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Hora Chart\",\r\n  //       value: \"D2\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Dreshkan Chart\",\r\n  //       value: \"D3\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Chathurthamasha Chart\",\r\n  //       value: \"D4\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Panchmansha Chart\",\r\n  //       value: \"D5\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Saptamansha Chart\",\r\n  //       value: \"D7\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Ashtamansha Chart\",\r\n  //       value: \"D8\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Navamansha Chart\",\r\n  //       value: \"D9\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Dashamansha Chart\",\r\n  //       value: \"D10\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Dwadashamsha Chart\",\r\n  //       value: \"D12\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Shodashamsha Chart\",\r\n  //       value: \"D16\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Vishamansha Chart\",\r\n  //       value: \"D20\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Chaturvimshamsha Chart\",\r\n  //       value: \"D24\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Bhamsha Chart\",\r\n  //       value: \"D27\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Trishamansha Chart\",\r\n  //       value: \"D30\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Khavedamsha Chart\",\r\n  //       value: \"D40\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Akshvedansha Chart\",\r\n  //       value: \"D45\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Shashtymsha Chart\",\r\n  //       value: \"D60\",\r\n  //     },\r\n  //   ];\r\n  handleChange = (e) => {\r\n    this.setState({ selected: e.target.value });\r\n  };\r\n  ashtakChange = (e) => {\r\n    this.setState({ dropdownList: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n    axiosConfig\r\n      .get(`/user/birth_detailsByAstroid/${astroId}`)\r\n      .then((response) => {\r\n        // console.log(response.data.data);\r\n        this.setState({ yoginiDasha: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  //   handleSubmit = () => {\r\n  //     axiosConfig\r\n  //       .post(\r\n  //         `/user/horo_chart/${this.state.selected}`,\r\n  //         this.state.yoginiDasha[0]\r\n  //       )\r\n  //       .then((response) => {\r\n  //         this.setState({ horoChart: response.data.data });\r\n  //         console.log(\"yogini\", response.data.data);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(\"Error BirthDetails\", error);\r\n  //         swal(\"Error!\", \"You clicked the button!\", \"error\");\r\n  //       });\r\n  //   };\r\n  handleSubmitList = () => {\r\n    console.log(this.state.dropdownList);\r\n    axiosConfig\r\n      .post(\r\n        `/user/Ashtakvarga/${this.state.dropdownList}`,\r\n        this.state.yoginiDasha[0]\r\n      )\r\n      .then((response) => {\r\n        this.setState({ Ashtakvarga: response.data.data });\r\n        this.setState({\r\n          ashtalData: response.data.data.ashtak_points.aquarius,\r\n        });\r\n        console.log(\"CVCVCV\", response.data.data.ashtak_points.aquarius);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error BirthDetails\", error);\r\n        swal(\"Error!\", \"You clicked the button!\", \"error\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          {/* <Row>\r\n            <Col sm=\"12\">\r\n              <div>\r\n                <Breadcrumb listTag=\"div\">\r\n                  <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                    Home\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem href=\"/app/setting/bank/bankList\" tag=\"a\">\r\n                    Horoscope Details\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem active> Horoscope</BreadcrumbItem>\r\n                </Breadcrumb>\r\n              </div>\r\n            </Col>\r\n          </Row> */}\r\n          {/* <Card className=\"overflow-hidden app-ecommerce-details\">\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Horoscope List\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <select name=\"selected\" onChange={(e) => this.handleChange(e)}>\r\n                  {this.list.map((option) => (\r\n                    <>\r\n                      <option> Select Horoscope</option>\r\n                      <option value={option.value}> {option.label}</option>\r\n                    </>\r\n                  ))}\r\n                </select>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  onClick={this.handleSubmit}\r\n                  className=\"ml-1  btn btn-success \"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\" btn btn-danger float-right\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/conversation/intakelist\")\r\n                      }\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <CardBody className=\"pb-0\">\r\n              <Table bordered responsive={true}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Sign</th>\r\n                    <th>Sign Name</th>\r\n                    <th>Planet</th>\r\n                    <th>Planet Small</th>\r\n                    <th> Planet Degree</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.horoChart &&\r\n                    this.state.horoChart.map((detail) => {\r\n                      return (\r\n                        <tr key={detail._id}>\r\n                          <th scope=\"row\">1</th>\r\n                          <td>{detail.sign}</td>\r\n                          <td>{detail.sign_name}</td>\r\n                          <td>{detail.planet}</td>\r\n                          <td>{detail.planet_small}</td>\r\n                          <td>{detail.planet_degree}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card> */}\r\n          <Card className=\"overflow-hidden app-ecommerce-details\">\r\n            <Row className=\"m-2\">\r\n              <Col lg=\"3\" md=\"4\" sm=\"6\" className=\"my-1\">\r\n                <h4 col-sm-6 className=\"float-left\">\r\n                  Ashtakvarga List\r\n                </h4>\r\n              </Col>\r\n              <Col lg=\"3\" md=\"3\" sm=\"6\">\r\n                <select\r\n                  name=\"dropdownList\"\r\n                  className=\"mt-2\"\r\n                  onChange={(e) => this.ashtakChange(e)}\r\n                >\r\n                  <option> Select Ashtakvarga</option>\r\n                  <option value=\"sun\">sun</option>\r\n                  <option value=\"moon\">moon</option>\r\n                  <option value=\"mars\">mars</option>\r\n                  <option value=\"mercury\">mercury</option>\r\n                  <option value=\"jupiter\">jupiter</option>\r\n                  <option value=\"venus\">venus</option>\r\n                  <option value=\"saturn\">saturn</option>\r\n                  <option value=\"ascendant\">ascendant</option>\r\n                </select>\r\n              </Col>\r\n              <Col lg=\"3\" md=\"3\" sm=\"6\" className=\"my-1\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  onClick={this.handleSubmitList}\r\n                  className=\"ml-1  btn btn-success \"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n              <Col lg=\"3\" md=\"3\" sm=\"6\" className=\"my-1\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      size=\"sm\"\r\n                      className=\" btn btn-danger float-right\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/conversation/intakelist\")\r\n                      }\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <CardBody className=\"pb-0\">\r\n              <div\r\n                style={{\r\n                  maxHeight: \"200px\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                <Table responsive style={style.table}>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>ascendant</th>\r\n                      <th>jupiter</th>\r\n                      <th>mars</th>\r\n                      <th>mercury</th>\r\n                      <th>moon</th>\r\n                      <th>saturn</th>\r\n                      <th>sun</th>\r\n                      <th>total</th>\r\n                      <th>venus</th>\r\n                      <th>Sign Id</th>\r\n                      <th>Sign Name</th>\r\n                      <th>Type</th>\r\n                      <th>Planet</th>\r\n                      <th>total</th>\r\n                      <th>venus</th>\r\n                      <th>Sign Id</th>\r\n                      <th>Sign Name</th>\r\n                      <th>Type</th>\r\n                      <th>Planet</th>\r\n                      <th>total</th>\r\n                      <th>venus</th>\r\n                      <th>Sign Id</th>\r\n                      <th>Sign Name</th>\r\n                      <th>Type</th>\r\n                      <th>Planet</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>{this.state.ashtalData.ascendant}</td>\r\n                      <td>{this.state.ashtalData.jupiter}</td>\r\n                      <td>{this.state.ashtalData.mars}</td>\r\n                      <td>{this.state.ashtalData.mercury}</td>\r\n                      <td>{this.state.ashtalData.moon}</td>\r\n                      <td>{this.state.ashtalData.saturn}</td>\r\n                      <td>{this.state.ashtalData.sun}</td>\r\n                      <td>{this.state.ashtalData.total}</td>\r\n                      <td>{this.state.ashtalData.venus}</td>\r\n                      <td>{this.state.Ashtakvarga?.ashtak_varga?.sign_id}</td>\r\n\r\n                      <td>{this.state.Ashtakvarga?.ashtak_varga?.type}</td>\r\n                      <td>{this.state.Ashtakvarga?.ashtak_varga?.planet}</td>\r\n                      <td>{this.state.Ashtakvarga?.ashtak_varga?.sign}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default YoginiDasha;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Ashtakvarga from \"./yog\";\r\nimport NewCode from \"./newCode\";\r\nimport \"../../../assets/scss/pages/app-ecommerce-shop.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nconst style = {\r\n  table: {\r\n    width: \"100%\",\r\n    display: \"table\",\r\n    borderSpacing: 0,\r\n    borderCollapse: \"separate\",\r\n  },\r\n};\r\nclass Dosha extends React.Component {\r\n  list = [\r\n    {\r\n      id: \"1\",\r\n      label: \"Chalit Chart\",\r\n      value: \"chalit\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      label: \"Sun Chart\",\r\n      value: \"SUN\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      label: \"Moon Chart\",\r\n      value: \"MOON\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      label: \"Brith Chart\",\r\n      value: \"D1\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      label: \"Hora Chart\",\r\n      value: \"D2\",\r\n    },\r\n    {\r\n      id: \"6\",\r\n      label: \"Dreshkan Chart\",\r\n      value: \"D3\",\r\n    },\r\n    {\r\n      label: \"Chathurthamasha Chart\",\r\n      value: \"D4\",\r\n    },\r\n    {\r\n      label: \"Panchmansha Chart\",\r\n      value: \"D5\",\r\n    },\r\n    {\r\n      label: \"Saptamansha Chart\",\r\n      value: \"D7\",\r\n    },\r\n    {\r\n      label: \"Ashtamansha Chart\",\r\n      value: \"D8\",\r\n    },\r\n    {\r\n      label: \"Navamansha Chart\",\r\n      value: \"D9\",\r\n    },\r\n    {\r\n      label: \"Dashamansha Chart\",\r\n      value: \"D10\",\r\n    },\r\n    {\r\n      label: \"Dwadashamsha Chart\",\r\n      value: \"D12\",\r\n    },\r\n    {\r\n      label: \"Shodashamsha Chart\",\r\n      value: \"D16\",\r\n    },\r\n    {\r\n      label: \"Vishamansha Chart\",\r\n      value: \"D20\",\r\n    },\r\n    {\r\n      label: \"Chaturvimshamsha Chart\",\r\n      value: \"D24\",\r\n    },\r\n    {\r\n      label: \"Bhamsha Chart\",\r\n      value: \"D27\",\r\n    },\r\n    {\r\n      label: \"Trishamansha Chart\",\r\n      value: \"D30\",\r\n    },\r\n    {\r\n      label: \"Khavedamsha Chart\",\r\n      value: \"D40\",\r\n    },\r\n    {\r\n      label: \"Akshvedansha Chart\",\r\n      value: \"D45\",\r\n    },\r\n    {\r\n      label: \"Shashtymsha Chart\",\r\n      value: \"D60\",\r\n    },\r\n  ];\r\n  state = {\r\n    rowData: [],\r\n    data: {},\r\n    selected: \"\",\r\n    horoChart: [],\r\n    ashtakvarga: [],\r\n    ashtalData: [],\r\n    dropdownList: \"\",\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      // {\r\n      //   headerName: \"Action\",\r\n      //   field: \"sortorder\",\r\n      //   width: 300,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Button\r\n      //               className=\"mr-50\"\r\n      //               color=\"success\"\r\n      //               size=\"sm\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/conversation/yoginiDasha/${params.data?._id}`\r\n      //                 )\r\n      //               }\r\n      //             >\r\n      //               Dosha\r\n      //             </Button>\r\n      //           )}\r\n      //         />\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Eye\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"green\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/conversation/horoScopeChart/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Button\r\n      //               className=\"mr-50\"\r\n      //               color=\"success\"\r\n      //               size=\"sm\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/conversation/birthchart/${params.data?._id}`\r\n      //                 )\r\n      //               }\r\n      //             >\r\n      //               BirthChart\r\n      //             </Button>\r\n      //           )}\r\n      //         />\r\n      //         {/* <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/astrology/editAstrologer/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         /> */}\r\n      //         {/* <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             let selectedData = this.gridApi.getSelectedRows();\r\n      //             this.runthisfunction(params.data._id);\r\n      //             this.gridApi.updateRowData({ remove: selectedData });\r\n      //           }}\r\n      //         /> */}\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Sign\",\r\n        field: \"type\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.sign}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Sign Name\",\r\n        field: \"sign_name\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.sign_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Planet\",\r\n        field: \"planet\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.planet}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Planet Small\",\r\n        field: \"planet_small\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.planet_small}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Planet Degree\",\r\n        field: \"planet_degree\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.planet_degree}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ selected: e.target.value });\r\n  };\r\n  ashtakChange = (e) => {\r\n    this.setState({ dropdownList: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    let astroId = localStorage.getItem(\"astroId\");\r\n    axiosConfig\r\n      .get(`/user/birth_detailsByAstroid/${astroId}`)\r\n      .then((response) => {\r\n        this.setState({ yoginiDasha: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  handleSubmit = () => {\r\n    axiosConfig\r\n      .post(\r\n        `/user/horo_chart/${this.state.selected}`,\r\n        this.state.yoginiDasha[0]\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({ rowData: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error BirthDetails\", error);\r\n        swal(\"Error!\", \"You clicked the button!\", \"error\");\r\n      });\r\n  };\r\n\r\n  // async componentDidMount() {\r\n  //   let astroId = localStorage.getItem(\"astroId\");\r\n  //   await axiosConfig\r\n  //     .get(`/admin/intekListByastro/${astroId}`)\r\n  //     .then((response) => {\r\n  //       let rowData = response.data.data;\r\n  //       this.setState({ rowData });\r\n  //     });\r\n  // }\r\n\r\n  // async runthisfunction(id) {\r\n  //   console.log(id);\r\n  //   await axiosConfig.get(`/admin/dlt_ChatIntek/${id}`).then(\r\n  //     (response) => {\r\n  //       console.log(response);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* <Breadcrumbs\r\n            breadCrumbTitle=\"  Horoscope List\"\r\n            breadCrumbParent=\"Home\"\r\n            breadCrumbActive=\"   Horoscope List\"\r\n          /> */}\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col lg=\"3\" md=\"3\" sm=\"6\" className=\"my-1\">\r\n                    <h4 sm=\"6\" className=\"float-left\">\r\n                      Horoscope List\r\n                    </h4>\r\n                  </Col>\r\n                  <Col lg=\"3\" md=\"3\" sm=\"6\" className=\"my-1\">\r\n                    <select\r\n                      name=\"selected\"\r\n                      onChange={(e) => this.handleChange(e)}\r\n                    >\r\n                      {this.list.map((option) => (\r\n                        <option value={option.value} key={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </Col>\r\n\r\n                  <Col lg=\"3\" md=\"3\" sm=\"6\">\r\n                    <Button\r\n                      onClick={this.handleSubmit}\r\n                      size=\"sm\"\r\n                      className=\"ml-1  btn btn-success \"\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Col>\r\n                  <Col lg=\"3\" md=\"3\" sm=\"6\">\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-danger float-right\"\r\n                          size=\"sm\"\r\n                          onClick={() =>\r\n                            history.push(\"/app/conversation/intakelist\")\r\n                          }\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <NewCode />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Dosha;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}