{"version":3,"sources":["views/apps/calls/VideoCall.js"],"names":["getUrlParams","url","window","location","href","urlStr","split","URLSearchParams","App","roomID","get","len","result","i","chars","maxPos","length","charAt","Math","floor","random","randomID","token","tok","userID","fetch","method","then","res","json","generateToken","myMeeting","element","KitToken","ZegoUIKitPrebuilt","generateKitTokenForProduction","create","joinRoom","container","sharedLinks","name","protocol","host","pathname","branding","logoURL","scenario","mode","OneONoneCall","className","ref","style","width","height"],"mappings":";2RACA,06MAuBO,SAASA,IAA0C,IAA7BC,EAAG,uDAAGC,OAAOC,SAASC,KAC7CC,EAASJ,EAAIK,MAAM,KAAK,GAC5B,OAAO,IAAIC,gBAAgBF,GAGd,SAASG,IACtB,IAAMC,EAAST,IAAeU,IAAI,WAlBpC,SAAkBC,GAChB,IAAIC,EAAS,GACb,GAAIA,EAAQ,OAAOA,EACnB,IAEEC,EAFEC,EAAQ,iEACVC,EAASD,EAAME,OAGjB,IADAL,EAAMA,GAAO,EACRE,EAAI,EAAGA,EAAIF,EAAKE,IACnBD,GAAUE,EAAOG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAErD,OAAOH,EAQwCS,CAAS,GAKhDC,EA7BV,SAAuBC,EAAKC,GAE1B,OAAOC,MAAM,GAAD,OAAIF,EAAG,gCAAwBC,EAAM,oBAAoB,CACnEE,OAAQ,QACPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,UAyBHC,CADhB,iQAHa,QAIPR,MACJS,EAAS,uCAAG,WAAOC,GAAO,uEACtBC,EAAWC,oBAAkBC,8BACjC,WACAb,EACAb,EATW,OACE,QAYJyB,oBAAkBE,OAAOH,GAEjCI,SAAS,CACVC,UAAWN,EACXO,YAAa,CACX,CACEC,KAAM,gBACNvC,IACEC,OAAOC,SAASsC,SAChB,KACAvC,OAAOC,SAASuC,KAChB,eACAxC,OAAOC,SAASwC,SAChB,WACAlC,IAINmC,SAAU,CACRC,QACE,wEAEJC,SAAU,CACRC,KAAMb,oBAAkBc,gBAGzB,2CACJ,gBAnCY,sCAsFb,OACE,uBAAKC,UAAU,aACb,uBACEA,UAAU,kCACVC,IAAKnB,EACLoB,MAAO,CAAEC,MAAO,QAASC,OAAQ","file":"static/js/175.b50f6bb3.chunk.js","sourcesContent":["import * as React from \"react\";\n// import './style.css';\n// import { getUserID } from \"../astrologerdetail\";\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\n\n// get token\nfunction generateToken(tok, userID) {\n  // Obtain the token interface provided by the App Server\n  return fetch(`${tok}/access_token?userID=${userID}&expired_ts=7200`, {\n    method: \"GET\",\n  }).then((res) => res.json());\n}\nfunction randomID(len) {\n  let result = \"\";\n  if (result) return result;\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\n    maxPos = chars.length,\n    i;\n  len = len || 5;\n  for (i = 0; i < len; i++) {\n    result += chars?.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return result;\n}\nexport function getUrlParams(url = window.location.href) {\n  let urlStr = url.split(\"?\")[1];\n  return new URLSearchParams(urlStr);\n}\n\nexport default function App() {\n  const roomID = getUrlParams().get(\"roomID\") || randomID(4);\n  const userID = \"demo\";\n  const userName = \"demo\";\n  const tokn =\n    \"04AAAAAGRnaDEAEDF2NmRidmFvYzVtMDh5enYAoHQN1UVEX3SvxWqHyD+WAz+z3WcONHy/qPIazySzboYaHIHrFP8JfbW4YtDHgPhgaNS1l1R1229c4Z9ldg0UWlXeycDQyYf2WdBfzn9gTixATQ0Df3JZVR1NxZlgJAWKP6qqoOJnOZYQyY36WDp97m7ue/AS5JMXS5UasV3j56TKhpk3wKbIvkyYxG97NlVRIeWhl1bcPgKUm3L2B1LZ2gQ=\";\n  const { token } = generateToken(tokn, userID);\n  let myMeeting = async (element) => {\n    const KitToken = ZegoUIKitPrebuilt.generateKitTokenForProduction(\n      1011009319,\n      token,\n      roomID,\n      userID,\n      userName\n    );\n    const zp = ZegoUIKitPrebuilt.create(KitToken);\n\n    zp.joinRoom({\n      container: element,\n      sharedLinks: [\n        {\n          name: \"Personal link\",\n          url:\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            \"/#/VideoCall\" +\n            window.location.pathname +\n            \"?roomID=\" +\n            roomID,\n        },\n      ],\n      // maxUsers: 4,\n      branding: {\n        logoURL:\n          \"https://www.zegocloud.com/_nuxt/img/zegocloud_logo_white.ddbab9f.png\",\n      },\n      scenario: {\n        mode: ZegoUIKitPrebuilt.OneONoneCall,\n      },\n      // sharedLinks,\n    });\n  };\n  // let myMeeting = async (element) => {\n  //   // generate Kit Token\n  //   const appID = 1011009319;\n  //   // const response = getUserID();\n  //   const serverSecret = \"0b7c5477f07346c1a906c99d3f171f2e\";\n  //   //  console.log(window.location.pathname)\n  //   const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\n  //     appID,\n  //     serverSecret,\n  //     roomID,\n  //     randomID(5).toString(),\n  //     \"Sadik Khan\"\n  //     //   response\n  //   );\n\n  //   // Create instance object from Kit Token.\n  //   const zp = ZegoUIKitPrebuilt.create(kitToken);\n  //   // start the call\n  //   zp.joinRoom({\n  //     container: element,\n  //     useFrontFacingCamera: false,\n  //     sharedLinks: [\n  //       {\n  //         name: \"Personal link\",\n  //         url:\n  //           window.location.protocol +\n  //           \"//\" +\n  //           window.location.host +\n  //           \"/#/VideoCall\" +\n  //           window.location.pathname +\n  //           \"?roomID=\" +\n  //           roomID,\n  //       },\n  //     ],\n  //     turnOnCameraWhenJoining: false,\n  //     scenario: {\n  //       // mode: ZegoUIKitPrebuilt.VideoConference,\n  //       mode: \"OneONoneCall\",\n  //       config: {\n  //         role: \"Host\",\n  //       },\n  //     },\n\n  //     showScreenSharingButton: true,\n  //     preJoinViewConfig: {\n  //       title: \"Join AstroGyata Meeting Room\",\n  //     },\n  //   });\n  // };\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"myCallContainer pt-3  container\"\n        ref={myMeeting}\n        style={{ width: \"100vw\", height: \"100vh\" }}\n      ></div>\n    </div>\n  );\n}\n\n// import * as React from \"react\";\n// // import './style.css';\n// // import { getUserID } from \"../astrologerdetail\";\n// import { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\n\n// function randomID(len) {\n//   let result = \"\";\n//   if (result) return result;\n//   var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\n//     maxPos = chars.length,\n//     i;\n//   len = len || 5;\n//   for (i = 0; i < len; i++) {\n//     result += chars.charAt(Math.floor(Math.random() * maxPos));\n//   }\n//   return result;\n// }\n\n// export function getUrlParams(url = window.location.href) {\n//   let urlStr = url.split(\"?\")[1];\n//   return new URLSearchParams(urlStr);\n// }\n\n// export default function App() {\n//   const roomID = getUrlParams().get(\"roomID\") || randomID(5);\n//   let myMeeting = async (element) => {\n//     // generate Kit Token\n//     const appID = 1011009319;\n//     // const response = getUserID();\n//     const serverSecret = \"0b7c5477f07346c1a906c99d3f171f2e\";\n//     //  console.log(window.location.pathname)\n//     const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\n//       appID,\n//       serverSecret,\n//       roomID,\n//       randomID(5).toString(),\n//       \"Sadik Khan\"\n//       //   response\n//     );\n\n//     // Create instance object from Kit Token.\n//     const zp = ZegoUIKitPrebuilt.create(kitToken);\n//     // start the call\n//     zp.joinRoom({\n//       container: element,\n//       useFrontFacingCamera: false,\n//       sharedLinks: [\n//         {\n//           name: \"Personal link\",\n//           url:\n//             window.location.protocol +\n//             \"//\" +\n//             window.location.host +\n//             \"/#/VideoCall\" +\n//             window.location.pathname +\n//             \"?roomID=\" +\n//             roomID,\n//         },\n//       ],\n//       turnOnCameraWhenJoining: false,\n//       scenario: {\n//         // mode: ZegoUIKitPrebuilt.VideoConference,\n//         mode: \"OneONoneCall\",\n//         config: {\n//           role: \"Host\",\n//         },\n//       },\n\n//       showScreenSharingButton: true,\n//       preJoinViewConfig: {\n//         title: \"Join AstroGyata Meeting Room\",\n//       },\n//     });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div\n//         className=\"myCallContainer pt-3  container\"\n//         ref={myMeeting}\n//         style={{ width: \"100vw\", height: \"100vh\" }}\n//       ></div>\n//     </div>\n//   );\n// }\n"],"sourceRoot":""}