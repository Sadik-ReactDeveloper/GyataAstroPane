{"version":3,"sources":["views/apps/orderhistory/OrderHisList.js"],"names":["i","OrderHisList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","orderId","className","razorpay_payment_id","product","desc","cartId","total_amt","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","id","console","log","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/186.62c48a0f.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n// import axiosConfig from \"../../../axiosConfig\";\nimport axios from \"axios\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport axiosConfig from \"../../../axiosConfig\";\n\nclass OrderHisList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n\n      {\n        headerName: \"OrderId\",\n        field: \"orderId\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.orderId}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Payment ID\",\n        field: \"Payment ID\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.razorpay_payment_id}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Description\",\n        field: \"desc\t\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.product?.product?.desc}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"image\",\n        field: \"image\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              {/* <img\n                width=\"50px\"\n                src={params.data?.prod}\n                alt=\"imag\"\n              /> */}\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Product price\",\n        field: \"Product Price\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.cartId?.total_amt}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Product Name\",\n        field: \"Product Name\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return <div>{/* <span>{params.data?.product}</span> */}</div>;\n        },\n      },\n\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.status}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Route\n                render={({ history }) => (\n                  <Eye\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"green\"\n                    onClick={() =>\n                      history.push(\n                        `/app/userride/viewUserRide/${params.data._id}`\n                      )\n                    }\n                  />\n                )}\n              />\n              <Route\n                render={({ history }) => (\n                  <Edit\n                    className=\"mr-50\"\n                    size=\"25px\"\n                    color=\"blue\"\n                    onClick={() => history.push(\"/app/userride/editUserRide\")}\n                  />\n                )}\n              />\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    await axiosConfig\n      .get(\"/admin/admin_product_Orderslist\")\n      .then((response) => {\n        let rowData = response.data.data;\n        this.setState({ rowData });\n      });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/admin/delcustomer/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      // console.log(rowData),\n      <div>\n        <Breadcrumbs\n          breadCrumbTitle=\"Order History\"\n          breadCrumbParent=\"Home\"\n          breadCrumbActive=\"Order History\"\n        />\n\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    All Orders\n                  </h1>\n                </Col>\n                <Col>\n                  <Route\n                    render={({ history }) => (\n                      <Button\n                        className=\" btn btn-success float-right\"\n                        onClick={() =>\n                          history.push(\"/app/prediction/addprediction\")\n                        }\n                      >\n                        Add New\n                      </Button>\n                    )}\n                  />\n                </Col>\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default OrderHisList;\n"],"sourceRoot":""}