{"version":3,"sources":["views/apps/calls/Streaming.js"],"names":["i","randomID","len","result","chars","maxPos","length","charAt","Math","floor","random","getUrlParams","url","window","location","href","urlStr","split","URLSearchParams","App","roomID","get","role_str","role","ZegoUIKitPrebuilt","Host","Cohost","Audience","sharedLinks","push","name","protocol","host","pathname","kitToken","generateKitTokenForTest","myMeeting","element","zp","create","astroid","localStorage","getItem","joinRoom","container","scenario","mode","LiveStreaming","config","preJoinViewConfig","title","onLiveStart","data","console","log","obj","status","videoliveStream","axiosConfig","post","then","response","setItem","_id","catch","error","onLiveEnd","className","ref","style","width","height"],"mappings":";mSACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEA,SAASC,EAASC,GAChB,IAAIC,EAAS,GACb,GAAIA,EAAQ,OAAOA,EACnB,IAEEH,EAFEI,EAAQ,iEACVC,EAASD,EAAME,OAGjB,IADAJ,EAAMA,GAAO,EACRF,EAAI,EAAGA,EAAIE,EAAKF,IACnBG,GAAUC,EAAMG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEpD,OAAOF,EAGF,SAASQ,IAA0C,IAA7BC,EAAG,uDAAGC,OAAOC,SAASC,KAC7CC,EAASJ,EAAIK,MAAM,KAAK,GAC5B,OAAO,IAAIC,gBAAgBF,GAGd,SAASG,IACtB,IAAMC,EAAST,IAAeU,IAAI,WAAapB,EAAS,GACpDqB,EAAWX,EAAaE,OAAOC,SAASC,MAAMM,IAAI,SAAW,OAC3DE,EACS,SAAbD,EACIE,oBAAkBC,KACL,WAAbH,EACAE,oBAAkBE,OAClBF,oBAAkBG,SAEpBC,EAAc,GACdL,IAASC,oBAAkBC,MAAQF,IAASC,oBAAkBE,QAChEE,EAAYC,KAAK,CACfC,KAAM,kBACNlB,IACEC,OAAOC,SAASiB,SAChB,KACAlB,OAAOC,SAASkB,KAChBnB,OAAOC,SAASmB,SAChB,WACAb,EACA,iBAGNQ,EAAYC,KAAK,CACfC,KAAM,mBACNlB,IACEC,OAAOC,SAASiB,SAChB,KACAlB,OAAOC,SAASkB,KAChBnB,OAAOC,SAASmB,SAChB,WACAb,EACA,mBAIJ,IAEMc,EAAWV,oBAAkBW,wBAFrB,UACO,mCAInBf,EACAnB,EAAS,GACTA,EAAS,IAIPmC,EAAS,uCAAG,WAAOC,GAAO,yEAEtBC,EAAKd,oBAAkBe,OAAOL,GAChCM,EAAUC,aAAaC,QAAQ,WAGnCJ,EAAGK,SAAS,CACVC,UAAWP,EACXQ,SAAU,CACRC,KAAMtB,oBAAkBuB,cACxBC,OAAQ,CACNzB,SAGJK,cACAqB,kBAAmB,CACjBC,MAAO,sBAETC,YAAa,SAACC,GACZC,QAAQC,IAAIF,GAKZ,IAAIG,EAAM,CACRf,QAASA,EACTgB,OAAQ,OACRC,gBAAiBrC,GAEnBsC,IACGC,KAAK,sBAAuBJ,GAC5BK,MAAK,SAACC,GAELpB,aAAaqB,QAAQ,gBAAiBD,EAAST,KAAKA,KAAKW,QAQ1DC,OAAM,SAACC,GACNZ,QAAQC,IAAIW,OAKlBC,UAAW,WACTR,IACGrC,IAAI,yBAAD,OAA0BoB,aAAaC,QAAQ,mBAClDkB,MAAK,SAACC,GACLR,QAAQC,IAAI,cAAeO,EAAST,SAErCY,OAAM,SAACC,GACNZ,QAAQC,IAAIW,SAGjB,2CACJ,gBA1DY,sCA4Db,OACE,uBACEE,UAAU,kBACVC,IAAKhC,EACLiC,MAAO,CAAEC,MAAO,QAASC,OAAQ","file":"static/js/182.053f4204.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nfunction randomID(len) {\r\n  let result = \"\";\r\n  if (result) return result;\r\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\r\n    maxPos = chars.length,\r\n    i;\r\n  len = len || 5;\r\n  for (i = 0; i < len; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * maxPos));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function getUrlParams(url = window.location.href) {\r\n  let urlStr = url.split(\"?\")[1];\r\n  return new URLSearchParams(urlStr);\r\n}\r\n\r\nexport default function App() {\r\n  const roomID = getUrlParams().get(\"roomID\") || randomID(5);\r\n  let role_str = getUrlParams(window.location.href).get(\"role\") || \"Host\";\r\n  const role =\r\n    role_str === \"Host\"\r\n      ? ZegoUIKitPrebuilt.Host\r\n      : role_str === \"Cohost\"\r\n      ? ZegoUIKitPrebuilt.Cohost\r\n      : ZegoUIKitPrebuilt.Audience;\r\n\r\n  let sharedLinks = [];\r\n  if (role === ZegoUIKitPrebuilt.Host || role === ZegoUIKitPrebuilt.Cohost) {\r\n    sharedLinks.push({\r\n      name: \"Join as co-host\",\r\n      url:\r\n        window.location.protocol +\r\n        \"//\" +\r\n        window.location.host +\r\n        window.location.pathname +\r\n        \"?roomID=\" +\r\n        roomID +\r\n        \"&role=Cohost\",\r\n    });\r\n  }\r\n  sharedLinks.push({\r\n    name: \"Join as audience\",\r\n    url:\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname +\r\n      \"?roomID=\" +\r\n      roomID +\r\n      \"&role=Audience\",\r\n  });\r\n  // generate Kit Token\r\n\r\n  const appID = 913321685;\r\n  const serverSecret = \"ec2b5151f49c5376a2e91a5a81a69bc0\";\r\n  const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\r\n    appID,\r\n    serverSecret,\r\n    roomID,\r\n    randomID(5),\r\n    randomID(5)\r\n  );\r\n\r\n  // start the call\r\n  let myMeeting = async (element) => {\r\n    // Create instance object from Kit Token.\r\n    const zp = ZegoUIKitPrebuilt.create(kitToken);\r\n    let astroid = localStorage.getItem(\"astroId\");\r\n\r\n    // start the call\r\n    zp.joinRoom({\r\n      container: element,\r\n      scenario: {\r\n        mode: ZegoUIKitPrebuilt.LiveStreaming,\r\n        config: {\r\n          role,\r\n        },\r\n      },\r\n      sharedLinks,\r\n      preJoinViewConfig: {\r\n        title: \"Join Room For Live\", // The title of the prejoin view. Uses \"enter Room\" by default.\r\n      },\r\n      onLiveStart: (data) => {\r\n        console.log(data);\r\n        // if (localStorage.getItem(\"stopLiveId\") && roomID) {\r\n        //   alert(\"ASTRO Already Live\");\r\n        // }\r\n        // else {\r\n        let obj = {\r\n          astroid: astroid,\r\n          status: \"live\",\r\n          videoliveStream: roomID,\r\n        };\r\n        axiosConfig\r\n          .post(\"/user/WebliveStream\", obj)\r\n          .then((response) => {\r\n            // console.log(\"LIVE Call \", response.data);\r\n            localStorage.setItem(\"stopLivenewId\", response.data.data._id);\r\n            // if (localStorage.getItem(\"stopLiveId\")) {\r\n            //   localStorage.setItem(\"stopLivenewId\", response.data.data._id);\r\n            // } else {\r\n            //   localStorage.setItem(\"stopLiveId\", response.data.data?._id);\r\n            //   this.setState({ status: \"\" });\r\n            // }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n        // }\r\n      },\r\n\r\n      onLiveEnd: () => {\r\n        axiosConfig\r\n          .get(`/user/closeLiveStream/${localStorage.getItem(\"stopLivenewId\")}`)\r\n          .then((response) => {\r\n            console.log(\"Stop LIVE  \", response.data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"myCallContainer\"\r\n      ref={myMeeting}\r\n      style={{ width: \"100vw\", height: \"100vh\" }}\r\n    ></div>\r\n  );\r\n}\r\n"],"sourceRoot":""}