{"version":3,"sources":["extensions/sweet-alert/SweetAlertBasic.js","extensions/sweet-alert/SweetAlertTypes.js","extensions/sweet-alert/SweetAlertOptions.js","extensions/sweet-alert/SweetAlertCallback.js","extensions/sweet-alert/SweetAlert.js","extensions/extensionsHeader.js"],"names":["BasicSweetAlert","state","basicAlert","titleAlert","htmlAlert","handleAlert","value","setState","Card","CardHeader","CardTitle","CardBody","Button","className","color","onClick","outline","title","show","this","onConfirm","href","target","rel","React","Component","SweetAlertTypes","successAlert","errorAlert","infoAlert","warningAlert","success","error","info","warning","SweetAlertOptions","imgAlert","timerAlert","outsideClickAlert","overlayAlert","inputAlert","custom","customIcon","timeout","onCancel","closeOnClickOutside","hideOverlay","input","placeHolder","BasicSweetCallback","defaultAlert","confirmAlert","cancelAlert","showCancel","reverseButtons","cancelBtnBsStyle","confirmBtnText","cancelBtnText","confirmBtnBsStyle","Slider","Fragment","subTitle","link","Row","Col","sm","SweetAlertCallback","ExtensionsHeader","data-tour","props"],"mappings":"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","file":"static/js/121.f407454f.chunk.js","sourcesContent":["import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass BasicSweetAlert extends React.Component {\n  state = {\n   basicAlert : false, \n   titleAlert : false, \n   htmlAlert : false, \n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <p>SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop computer, mobile or tablet. \n          It's even highly customizable, as you can see below!\n        </p>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"basicAlert\", true)} outline>Basic</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"titleAlert\", true)} outline>With Title</Button>\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"htmlAlert\", true)} outline>HTML</Button>\n        \n        <SweetAlert title=\"Any fool can use a computer\" \n          show={this.state.basicAlert}\n          onConfirm={() => this.handleAlert(\"basicAlert\", false)}\n        >\n        </SweetAlert>\n\n        <SweetAlert title=\"The Internet?,\" \n          show={this.state.titleAlert} \n          onConfirm={() => this.handleAlert(\"titleAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">That thing is still around?</p>\n        </SweetAlert>\n\n        <SweetAlert title={<strong>HTML <u>example</u></strong>} \n          show={this.state.htmlAlert} \n          onConfirm={() => this.handleAlert(\"htmlAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">You can use bold text,{\" \"}\n              <a href=\"http://pixinvent.com\" target=\"_blank\" rel=\"noopener noreferrer\">links</a> {\" \"}\n              and other HTML tags\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default BasicSweetAlert","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass SweetAlertTypes extends React.Component {\n  state = {\n   successAlert : false, \n   errorAlert : false, \n   infoAlert : false, \n   warningAlert : false\n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <p>\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\", \"success\" and \"info\". \n        </p>\n        <Button className=\"mr-1 mb-1\" color=\"success\" onClick={() => this.handleAlert(\"successAlert\", true)} outline>Success</Button>\n        <Button className=\"mr-1 mb-1\" color=\"danger\" onClick={() => this.handleAlert(\"errorAlert\", true)} outline>Error</Button>\n        <Button className=\"mr-1 mb-1\" color=\"warning\" onClick={() => this.handleAlert(\"warningAlert\", true)} outline>Warning</Button>\n        <Button className=\"mb-1\" color=\"info\" onClick={() => this.handleAlert(\"infoAlert\", true)} outline>Info</Button>\n        \n\n        <SweetAlert success title=\"Success\"\n          show={this.state.successAlert} \n          onConfirm={() => this.handleAlert(\"successAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">You clicked the button!</p>\n        </SweetAlert>\n\n        <SweetAlert error title=\"Error\"\n          show={this.state.errorAlert} \n          onConfirm={() => this.handleAlert(\"errorAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert info title=\"Info!\"\n          show={this.state.infoAlert} \n          onConfirm={() => this.handleAlert(\"infoAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert warning title=\"Warning\"\n          show={this.state.warningAlert} \n          onConfirm={() => this.handleAlert(\"warningAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default SweetAlertTypes","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n// import alertImg from \"../../assets/img/slider/04.jpg\"\n\nclass SweetAlertOptions extends React.Component {\n  state = {\n   imgAlert : false, \n   timerAlert : false, \n   outsideClickAlert : false, \n   overlayAlert : false,\n   inputAlert : false\n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"imgAlert\", true)} outline>Image</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"timerAlert\", true)} outline>Timeout</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"overlayAlert\", true)} outline>Overlay</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"outsideClickAlert\", true)} outline>Outside Click</Button>\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"inputAlert\", true)} outline>Input Alert</Button>\n        \n\n        <SweetAlert title=\"Sweet!\"  \n          custom\n          show={this.state.imgAlert}\n          customIcon=\"https://raw.githubusercontent.com/djorg83/react-bootstrap-sweetalert/master/demo/assets/thumbs-up.jpg\"\n          onConfirm={() => this.handleAlert(\"imgAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">Sweet Alert with an image.</p>\n        </SweetAlert>\n\n        <SweetAlert title=\"Auto close alert!\"\n          timeout={2000}\n          show={this.state.timerAlert} \n          onConfirm={() => this.handleAlert(\"timerAlert\", false)}\n          onCancel={() => this.handleAlert(\"timerAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              I will close in 2 seconds.\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"Click outside to close!\"\n          closeOnClickOutside\n          show={this.state.outsideClickAlert} \n          onConfirm={() => this.handleAlert(\"outsideClickAlert\", false)}\n          onCancel={() => this.handleAlert(\"outsideClickAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"No Overlay\"\n          hideOverlay\n          show={this.state.overlayAlert} \n          onConfirm={() => this.handleAlert(\"overlayAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"An input!\"\n          input\n          show={this.state.inputAlert}\n          placeHolder=\"Write something\" \n          onConfirm={() => this.handleAlert(\"inputAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              Write something interesting:\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default SweetAlertOptions","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass BasicSweetCallback extends React.Component {\n  state = {\n   defaultAlert : false, \n   confirmAlert : false, \n   cancelAlert : false, \n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Callback</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"defaultAlert\", true)} outline>Callback</Button>\n        \n        <SweetAlert title=\"Are you sure?\" \n          warning\n          show={this.state.defaultAlert}\n          showCancel\n          reverseButtons\n          cancelBtnBsStyle=\"danger\"\n          confirmBtnText=\"Yes, delete it!\"\n          cancelBtnText=\"Cancel\"\n          onConfirm={() => {\n            this.handleAlert(\"basicAlert\", false)\n            this.handleAlert(\"confirmAlert\", true)\n          }}\n          onCancel={() => {\n            this.handleAlert(\"basicAlert\", false)\n            this.handleAlert(\"cancelAlert\", true)\n          }}\n        >\n          You won't be able to revert this!\n        </SweetAlert>\n\n        <SweetAlert success title=\"Deleted!\" \n          confirmBtnBsStyle=\"success\"\n          show={this.state.confirmAlert} \n          onConfirm={() => {\n            this.handleAlert(\"defaultAlert\", false)\n            this.handleAlert(\"confirmAlert\", false)\n          }}\n        >\n            <p className=\"sweet-alert-text\">Your file has been deleted.</p>\n        </SweetAlert>\n\n        <SweetAlert error title=\"Cancelled\" \n          confirmBtnBsStyle=\"success\"\n          show={this.state.cancelAlert} \n          onConfirm={() =>{\n            this.handleAlert(\"defaultAlert\", false)\n            this.handleAlert(\"cancelAlert\", false)\n          }}\n        >\n            <p className=\"sweet-alert-text\">\n              Your imaginary file is safe :)\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default BasicSweetCallback","import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport { Row, Col } from \"reactstrap\"\nimport BasicSweetAlert from \"./SweetAlertBasic\"\nimport SweetAlertTypes from \"./SweetAlertTypes\"\nimport SweetAlertOptions from \"./SweetAlertOptions\"\nimport SweetAlertCallback from \"./SweetAlertCallback\"\nimport \"../../assets/scss/plugins/extensions/sweet-alerts.scss\"\nclass Slider extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"Sweet Alerts\"\n          subTitle=\"A React implementation of SweetAlert\"\n          link=\"https://github.com/djorg83/react-bootstrap-sweetalert\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <BasicSweetAlert />\n          </Col>\n          <Col sm=\"12\">\n            <SweetAlertTypes />\n          </Col>\n          <Col sm=\"12\">\n            <SweetAlertOptions />\n          </Col>\n          <Col sm=\"12\">\n            <SweetAlertCallback />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Slider\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n"],"sourceRoot":""}