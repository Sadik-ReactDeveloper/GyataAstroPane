{"version":3,"sources":["views/apps/report/PayoutAddReqEdit.js"],"names":["PayoutAddRequest","state","activeTab","toggle","tab","setState","onChangeHandler","event","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","props","match","params","id","axiosConfig","post","data","then","response","history","push","catch","error","this","get","first_name","last_name","customer_email","mobile_no","sortorder","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","lg","md","sm","required","type","placeholder","onChange","Ripple","color","Component"],"mappings":"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","file":"static/js/200.697927f2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Card,\n    CardBody,\n    Col,\n    Form,\n    Row,\n    Input,\n    Label,\n    Button,\n    FormGroup,\n} from \"reactstrap\";\n//import axios from \"axios\";\nimport axiosConfig from \"../../../axiosConfig\";\n// import { useParams } from \"react-router-dom\";\n//import { ToastContainer, toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Route } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nimport { data } from \"jquery\";\n\nexport class PayoutAddRequest extends Component {\n    state = {\n        activeTab: \"1\",\n    };\n\n    toggle = (tab) => {\n        this.setState({\n            activeTab: tab,\n        });\n    };\n\n    onChangeHandler = (event) => {\n        this.setState({ selectedFile: event.target.files[0] });\n        this.setState({ selectedName: event.target.files[0].name });\n        console.log(event.target.files[0]);\n    };\n\n    componentDidMount() {\n        console.log(this.props.match.params);\n        let { id } = this.props.match.params;\n        axiosConfig.get(`/getonecustomer/${id}`).then((response) => {\n            console.log(response);\n            this.setState({\n                first_name: \"\",\n                last_name: \"\",\n                customer_email: \"\",\n                mobile_no: \"\",\n                sortorder: \"\",\n                selectedFile: null,\n                status: response.data.data.status,\n            });\n        });\n        //   .catch((error) => {\n        //     console.log(error);\n        //   });\n    }\n\n    changeHandler1 = (e) => {\n        this.setState({ status: e.target.value });\n    };\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        console.log(this.props.match.params, this.state);\n        // const data = new FormData();\n        // data.append(\"sellerId\", this.state.sellerId);\n        // data.append(\"seller_name\", this.state.seller_name);\n        // data.append(\"selleremail\", this.state.selleremail);\n        // data.append(\"mobile_no\", this.state.mobile_no);\n        // data.append(\"password\", this.state.password);\n        // data.append(\"business_type\", this.state.business_type);\n        // data.append(\"store_name\", this.state.store_name);\n        // data.append(\"store_address\", this.state.store_address);\n        // data.append(\"gstin_no\", this.state.gstin_no);\n        // data.append(\"city\", this.state.city);\n        // data.append(\"sortorder\", this.state.sortorder);\n        // data.append(\"state\", this.state.state);\n        // data.append(\"status\", this.state.status);\n        // if (this.state.selectedFile !== null) {\n        //   data.append(\n        //     \"seller_img\",\n        //     this.state.selectedFile,\n        //     this.state.selectedName\n        //   );\n        // }\n\n        // for (var value of data.values()) {\n        //    console.log(value);\n        // }\n        // for (var key of data.keys()) {\n        //    console.log(key);\n        // }\n        let { id } = this.props.match.params;\n        axiosConfig\n            .post(`/view_onecust/${id}`, data)\n            .then((response) => {\n                console.log(response);\n                this.props.history.push(\"/app/customer/customerList\");\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    render() {\n        return (\n            <div>\n                <Breadcrumbs\n                    breadCrumbTitle=\"Add Payout Request\"\n                    breadCrumbParent=\"Home\"\n                    breadCrumbActive=\"Add Payout Request \"\n                />\n                <Card>\n                    <Row className=\"m-2\">\n                        <Col>\n                            <h1 col-sm-6 className=\"float-left\">\n                                Add Payout Request\n                            </h1>\n                        </Col>\n                        <Col>\n                            <Route\n                                render={({ history }) => (\n                                    <Button\n                                        className=\" btn btn-danger float-right\"\n                                        onClick={() =>\n                                            history.push(\"/app/prediction/predictionlist\")\n                                        }\n                                    >\n                                        Back\n                                    </Button>\n                                )}\n                            />\n                        </Col>\n                    </Row>\n                    <CardBody>\n                        <Form className=\"m-1\" onSubmit={this.submitHandler}>\n                            <Row>\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\n                                    <Label>Current Amount</Label>\n                                    <Input\n                                        required\n                                        type=\"text\"\n                                        name=\"first_name\"\n                                        placeholder=\"Enter Title\"\n                                        value={this.state.first_name}\n                                        onChange={this.changeHandler}\n                                    ></Input>\n                                </Col>\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\n                                    <Label>Request Amount</Label>\n                                    <Input\n                                        required\n                                        type=\"text\"\n                                        name=\"first_name\"\n                                        placeholder=\"Enter Title\"\n                                        value={this.state.first_name}\n                                        onChange={this.changeHandler}\n                                    ></Input>\n                                </Col>\n\n                                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\n                                    <Label>Date</Label>\n                                    <Input\n                                        required\n                                        type=\"date\"\n                                        name=\"customer_email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.customer_email}\n                                        onChange={this.changeHandler}\n                                    ></Input>\n                                </Col>\n                            </Row>\n                            <Row></Row>\n                            {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\n                <Label className=\"mb-1\">Status</Label>\n                <div\n                  className=\"form-label-group\"\n                  onChange={(e) => this.changeHandler1(e)}\n                >\n                  <input\n                    style={{ marginRight: \"3px\" }}\n                    type=\"radio\"\n                    name=\"status\"\n                    value=\"Active\"\n                  />\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\n\n                  <input\n                    style={{ marginRight: \"3px\" }}\n                    type=\"radio\"\n                    name=\"status\"\n                    value=\"Inactive\"\n                  />\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\n                </div>\n              </Col> */}\n                            <Row>\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\n                                    <Button.Ripple\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                        className=\"mr-1 mb-1\"\n                                    >\n                                        Save\n                                    </Button.Ripple>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\nexport default PayoutAddRequest;\n"],"sourceRoot":""}